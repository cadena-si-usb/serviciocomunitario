(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> "
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/SIGESC/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\nimport re\nimport gluon\nimport datetime\nimport os\nimport subprocess\nimport weasyprint\nfrom reportlab.platypus   import *\nfrom reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle\nfrom reportlab.lib.pagesizes import A4,letter\nfrom reportlab.rl_config  import defaultPageSize\nfrom reportlab.lib.units  import inch, mm\nfrom reportlab.lib.enums  import TA_LEFT, TA_RIGHT, TA_CENTER, TA_JUSTIFY\nfrom reportlab.lib import colors\nfrom gluon.tools   import Crud\nfrom uuid import uuid4\nfrom cgi  import escape\nfrom usbutils import get_ldap_data, random_key\nfrom cgi import escape \n\n### required - do no delete\ncrud = Crud(db)\n\ndef representsInt(s):\n    try:\n        sint = int(s)\n        return True if sint > 0 else False\n    except ValueError:\n        return False\n\nclass Actividad:\n    def __init__(self,f_nombre,f_resumen,f_alumnos,f_requerimientos):\n        self.f_nombre = f_nombre\n        self.f_resumen = f_resumen\n        self.f_alumnos = f_alumnos\n        self.f_requerimientos = f_requerimientos\n\n# auth = Auth(db,cas_provider = \'https://secure.ds\n###\n\n#def user():\n#      http://.../[app]/default/user/register\n#      http://.../[app]/default/user/login\n#      http://.../[app]/default/user/logout\n#      http://.../[app]/default/user/profile\n#      http://.../[app]/default/user/change_password\n#      http://.../[app]/default/user/verify_email\n#      http://.../[app]/default/user/retrieve_username\n#      http://.../[app]/default/user/request_reset_password\n#      http://.../[app]/default/user/reset_password\n#      http://.../[app]/default/user/impersonate\n#      http://.../[app]/default/user/groups\n#      http://.../[app]/default/user/not_authorized\n#    form=auth()\n#    return dict(form=form)\n\ndef verificar(form):\n    return dict(form=form)\n\ndef download():\n    return response.download(request,db)\ndef call(): return service()\n\n### controlers\ndef index():\n    if auth.is_logged_in():\n            redirect(URL("home"))\n\n    return dict(form=auth.login(), host=request.env.http_host)\n\ndef error():\n    return dict()\n\n#\n# Inicio de sesion\n########################\ndef logout():\n    es_interno = db.auth_user(auth.user_id)[\'f_tipo\'] != \'Externo\'\n    url = \'http://secure.dst.usb.ve/logout\' if es_interno else URL(\'index\')\n    auth.logout(next=url)\n\n\ndef login_cas():\n    print "im in    "\n    if not request.vars.getfirst(\'ticket\'):\n        redirect(URL(\'error\'))\n    try:\n        import ssl\n        import urllib2\n        ssl._create_default_https_context = ssl._create_unverified_context\n        url = "https://secure.dst.usb.ve/validate?ticket="+\\\n              request.vars.getfirst(\'ticket\') +\\\n              "&service=http%3A%2F%2F"+ request.env.http_host +"%2FSIGESC%2Fdefault%2Flogin_cas"\n        req = urllib2.Request(url)\n        response = urllib2.urlopen(req)\n        the_page = response.read()\n\tprint the_page\n    except Exception, e:\n        print e\n        redirect(URL(\'error\'))\n    print "pase"\n    if the_page[0:2] == "no":\n        print "no :("\n        redirect(URL(\'index\'))\n    else:\n        # session.casticket = request.vars.getfirst(\'ticket\')\n        data  = the_page.split()\n        usbid = data[1] \n        tablaUs  = db.t_universitario\n        consulta = db(tablaUs.f_usbid==usbid)\n        print(consulta)\n        if consulta.isempty():\n\n            clave   = random_key()\n            us      = get_ldap_data(usbid)\n\n            # print "insertando"\n            a = db.auth_user.insert(\n                first_name = us.get(\'first_name\'),\n                last_name  = us.get(\'last_name\'),\n                username   = usbid,\n                password   = db.auth_user.password.validate(clave)[0],\n                email      = us.get(\'email\'),\n                f_cedula     = us[\'cedula\'],\n                f_telefono   = us[\'phone\'],\n                f_tipo       = us[\'tipo\'],\n            )\n\n            user = db(db.auth_user.username==usbid).select()[0]\n            print us\n            db.t_universitario.insert(\n                f_usbid   = usbid,\n                f_key     = clave,\n                f_usuario = user.id\n            )\n\n            userUniv = db(db.t_universitario.f_usbid==usbid).select()[0]\n\n            if (us[\'tipo\'] == "Pregrado") or (us[\'tipo\'] == "Postgrado"):\n               # Si es estudiante insertar en su tabla\n                db.t_estudiante.insert(\n                    f_universitario = userUniv.id,\n                    f_carrera       = us[\'carrera\'],\n                    f_sede          = "Sartenejas"\n                )\n            elif us[\'tipo\'] == "Docente":\n                # En caso de ser docente, agregar dpto.\n                db.t_tutor_academico.insert(\n                    f_universitario = userUniv.id,\n                    f_departamento  = us[\'dpto\'],\n                    f_sede          = "Sartenejas"\n                )\n\n        else:\n            userUniv = db(db.t_universitario.f_usbid==usbid).select()[0]\n            clave    = userUniv.f_key\n\n\n        # Al finalizar login o registro, redireccionamos a home\n        auth.login_bare(usbid,clave)\n        redirect(\'home\')\n    return None\n\n\n# Contolador de redireccion de usuarios\n@auth.requires_login()\ndef home():\n\n    rolesUsuario=[]\n    \n    \n    for rol in db(db.auth_membership.user_id==auth.user_id).select():\n        rolesUsuario.append(db(db.auth_group.id==rol.group_id).select()[0].role)\n    \n    esTutorAcademico= db(db.t_proyecto_tutor.f_tutor==auth.user_id).select().first() !=None\n\n    usuario = db.auth_user(auth.user_id)\n    \n    esTutorComunitario = db(db.t_proyecto_tutor_comunitario.id==auth.user_id).select().first() !=None\n\n    msj      = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    tipo = usuario[\'f_tipo\']\n\n    return dict(esTutorComunitario=esTutorComunitario,esTutorAcademico=esTutorAcademico,roles=rolesUsuario,tipo_usuario=tipo,bienvenida=msj, host=request.env.http_host)\n\n# @ticket_in_session\ndef mostrar_credencial():\n    return dict()\n\n\ndef registro():\n    return dict(formulario=auth.register())\n\n@auth.requires_login()\ndef perfil():\n    rolesUsuario=[]\n\n    for rol in db(db.auth_membership.user_id==auth.user_id).select():\n        rolesUsuario.append(db(db.auth_group.id==rol.group_id).select()[0].role)\n    \n    if request.args(0) == \'search\':\n        if not ("Administrador" in rolesUsuerio):\n            redirect(URL(\'home\'))\n        user_id = request.args(1)\n    else:\n        user_id = auth.user_id\n\n\n    if db.auth_user(auth.user_id)[\'f_foto\']:\n        picture = URL(\'default\', \'download\', args=db.auth_user(user_id)[\'f_foto\'])\n    else:\n        picture = URL(\'static\', \'img/user.png\')\n\n    sede,dpto,carrera = None,None,None\n    univ = db.t_universitario(f_usuario=user_id)\n\n    if db.auth_user(auth.user_id)[\'f_tipo\'] == "Docente":\n        sede = univ.t_tutor_academico.select()[0][\'f_sede\']\n        dpto = univ.t_tutor_academico.select()[0][\'f_departamento\']\n    elif db.auth_user(auth.user_id)[\'f_tipo\'] in ["Pregrado","Postgrado"]:\n        sede    = univ.t_estudiante.select()[0][\'f_sede\']\n        carrera = univ.t_estudiante.select()[0][\'f_carrera\']\n    user = db.auth_user(auth.user_id)\n    return dict(form=user,picture=picture,dpto=dpto, sede=sede,carrera=carrera)\n\n@auth.requires_login()\ndef editar_perfil():\n    db.auth_user.username.writable=False\n    db.auth_user.f_foto.writable  =True\n    form = auth.profile()\n    form.element(\'input\', _type = \'submit\')[\'_class\'] = \'btn btn-primary\'\n\n    estudiante = None\n    docente    = None\n    if auth.user[\'f_tipo\'] in ["Pregrado","Postgrado"]:\n        estudiante = db.auth_user(auth.user_id)[\'t_universitario\'].select()[0][\'t_estudiante\'].select()[0]\n        form[0].insert(-1, TR(LABEL(T(\'Carrera:\')),\n                             INPUT(_id=\'carrera\',\n                                   _name=\'carrera\',\n                                   _value=estudiante[\'f_carrera\']\n                            )))\n        form[0].insert(-1, TR(LABEL(T(\'Sede:\')),\n                             SELECT(estudiante[\'f_sede\'],\n                                OPTGROUP(\'Sartenejas\',\'Litoral\'),\n                                _id=\'sede\',\n                                _name=\'sede\'\n                            )))\n    elif auth.user[\'f_tipo\']== "Docente":\n        docente = db.auth_user(auth.user_id)[\'t_universitario\'].select()[0][\'t_tutor_academico\'].select()[0]\n        form[0].insert(-1, TR(LABEL(T(\'Departamento:\')),\n                             INPUT(_id=\'departamento\',\n                                   _name=\'departamento\',\n                                   _value=docente[\'f_departamento\']\n                            )))\n        form[0].insert(-1, TR(LABEL(T(\'Sede:\')),\n                             SELECT(docente[\'f_sede\'],\n                                OPTGROUP(\'Sartenejas\',\'Litoral\'),\n                                _id=\'sede\',\n                                _name=\'sede\'\n                            )))\n\n    if form.accepts(request.vars, session, formname=\'form1\'):\n        response.flash = \'form accepted\'\n\n        if estudiante:\n            f_univ = db.auth_user(auth.user_id)[\'t_universitario\'].select()[0]\n            db(db.t_estudiante.f_universitario == f_univ[\'id\']).update(\n                f_sede=form.vars[\'sede\'],\n                f_carrera=form.vars[\'carrera\'])\n        elif docente:\n            f_univ = db.auth_user(auth.user_id)[\'t_universitario\'].select()[0]\n            db(db.t_tutor_academico.f_universitario == f_univ[\'id\']).update(\n                f_sede=form.vars[\'sede\'],\n                f_departamento=form.vars[\'departamento\'])\n    elif form.errors:\n        response.flash = \'form has errors\'\n\n\n    return dict(form=form,contrasena=auth.change_password())\n\ndef proponenteProyecto():\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name,auth.user.last_name)\n    idProponente = db(db.t_proponente.f_user==auth.user).select()\n    return dict(proyectos = db(db.t_project.f_proponente==idProponente[0]).select(), bienvenida=msj)\n\ndef moderarProyectos():\n    return dict(proyectos=db().select(db.t_cursa.ALL))\n\ndef estudiantes():\n    form = SQLFORM(db.t_estudiante,formstyle=\'table3cols\')\n    if form.process().accepted:\n        response.flash = \'1\'\n    elif form.errors:\n        response.flash = \'0\'\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, est=db(db.t_usuario_universitario.f_rol == "Estudiante").select(),message=T(response.flash))\n\ndef usuarios():\n    return dict(registrados=db(db.auth_user.id!=auth.user_id).select())\n\ndef usuarios_detalles():\n    idUsuario=request.args(0)\n\n    if db.auth_user(idUsuario)[\'f_foto\']:\n        picture = URL(\'default\', \'download\', args=db.auth_user(idUsuario)[\'f_foto\'])\n    else:\n        picture = URL(\'static\', \'img/user.png\')\n\n    sede,dpto,carrera = "","",""\n    univ = db.t_universitario(f_usuario=idUsuario)\n\n    if db.auth_user(idUsuario)[\'f_tipo\'] == "Docente":\n        sede = univ.t_tutor_academico.select()[0][\'f_sede\']\n        dpto = univ.t_tutor_academico.select()[0][\'f_departamento\']\n    elif db.auth_user(idUsuario)[\'f_tipo\'] in ["Pregrado","Postgrado"]:\n        sede    = univ.t_estudiante.select()[0][\'f_sede\']\n        carrera = univ.t_estudiante.select()[0][\'f_carrera\']\n\n    tabla= db(db.auth_user.id==idUsuario).select()[0]\n    return dict(form=tabla,picture=picture,dpto=dpto, sede=sede,carrera=carrera)\n\ndef eliminar_usuario():\n    idUsuario=request.args(0)\n    db(db.auth_user.id==idUsuario).delete()\n    redirect(URL(\'usuarios\'))\n\ndef roles_usuarios():\n    relaciones=db(db.auth_membership.user_id!=auth.user_id).select()\n    return dict(registrados=relaciones)\n\ndef eliminar_rol():\n    idrol=request.args(0)\n    db(db.auth_membership.id==idrol).delete()\n    redirect(URL(\'roles_usuarios\'))\n\ndef agregar_rol():\n    usuarios=db(db.auth_user.id!=auth.user_id).select()\n    return dict(usuarios=usuarios)\n\ndef agregar_rol_usuario():\n    idUsuario=request.args(0)\n    rolesUsuario= db(db.auth_membership.user_id==idUsuario).select()\n    roles= db().select(db.auth_group.ALL)\n    nombreUsuario= db(db.auth_user.id==idUsuario).select()[0].username\n    return dict(roles=roles,rolesUsuario=rolesUsuario,nombreUsuario=nombreUsuario,idUsuario=idUsuario)\n\ndef insertar_rol():\n    idUsuario=request.args(0)\n    idGrupo=request.args(1)\n    auth.add_membership(idGrupo, idUsuario)\n    redirect(URL(r=request,f=\'agregar_rol_usuario\',args=idUsuario))\n\ndef vista_proponente():\n    def my_form_processing(form):\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n\n    msj= \'Bienvenid@ %s %s\' % (session.user.f_nombres,session.user.f_apellidos)\n    return dict(bienvenida=msj)\n\ndef proponenteProyecto():\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name,auth.user.last_name)\n    idProponente = db(db.t_proponente.f_user==auth.user).select()\n    return dict(proyectos = db(db.t_project.f_proponente==idProponente[0]).select(), bienvenida=msj)\n\ndef moderarProyectos():\n    return dict(proyectos=db().select(db.t_cursa.ALL))\n\n@auth.requires_login()\ndef estado_manage():\n    form = SQLFORM.smartgrid(db.t_estado,onupdate=auth.archive)\n    return dict(form=form)\n\n# @auth.requires_membership([\'Administrador\',\'Coordinador\'])\n@auth.requires_login()\ndef areas():\n    def my_form_processing(form):\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    form = SQLFORM(db.t_area,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, areas=db(db.t_area.f_estado=="Activo").select(),message=T(response.flash))\n\n@auth.requires_membership(\'Administrador\')\ndef proyectos():\n    def my_form_processing(form):\n        if not re.match(\'\\d{4}\', form.vars.f_codigo):\n            form.errors.f_codigo = \'El formato v\xc3\xa1lido del c\xc3\xb3digo son 4 d\xc3\xadgitos\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_descripcion):\n            form.errors.f_descripcion = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'\\d+\', form.vars.f_version):\n            form.errors.f_version = \'El formato v\xc3\xa1lido de la versi\xc3\xb3n son 2 d\xc3\xadgitos\'\n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n    form = SQLFORM(db.t_proyecto,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, proyectos=db(db.t_proyecto.f_estado_del=="Activo").select(),message=T(response.flash))\n\n\n# @auth.requires_membership(\'Estudiantes\')\n@auth.requires_login()\ndef proyectosEstudiante():\n    f_tutores = []\n    def my_form_processing(form):\n        f_tutores += form.vars.f_tutores\n        del form.vars.f_tutores\n        if not re.match(\'\\d{4}\', form.vars.f_codigo):\n            form.errors.f_codigo = \'El formato v\xc3\xa1lido del c\xc3\xb3digo son 4 d\xc3\xadgitos\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_descripcion):\n            form.errors.f_descripcion = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'\\d+\', form.vars.f_version):\n            form.errors.f_version = \'El formato v\xc3\xa1lido de la versi\xc3\xb3n son 2 d\xc3\xadgitos\'\n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n    form = SQLFORM(db.t_proyecto,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n    elif form.errors:\n        response.flash = \'0\'\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, proyectos=db(db.t_proyecto.f_estado_del=="Activo").select(),message=T(response.flash))\n\n\n@auth.requires_membership(\'Administrador\')\ndef comunidades():\n    def my_form_processing(form):\n        if not re.match(\'\\d\', form.vars.f_cantidadbeneficiados):\n            form.errors.f_cantidadbeneficiados = \'Debe ser un n\xc3\xbamero\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    form = SQLFORM(db.t_comunidad,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, comunidades=db(db.t_comunidad.f_estado_del=="Activo").select(),message=T(response.flash))\n\n@auth.requires_membership(\'Administrador\')\ndef validarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_state="2",f_valido="Valido")\n    return dict(proyecto=idProyecto)\n\ndef validacionProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_valido="Activo")\n    return dict(proyecto=idProyecto)\n\ndef solicitarValidacion():\n    idProyecto = long(request.args[0])\n    return dict(proyecto=idProyecto)\n\ndef solicitarValidacionEstudiante():\n    idProyecto = long(request.args[0])\n    return dict(proyecto=idProyecto)\n\ndef rechazarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_state="3")\n    return dict(proyecto=idProyecto)\n\ndef registrarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    proyectoInscrito = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    if not proyectoInscrito:\n        db.t_cursa.insert(f_estudiante=idEstudiante,f_project=idProyecto,f_estado="Pendiente")\n        mensaje = "Registro de proyecto exitoso. Volver a proyectos"\n    else:\n        mensaje = "Usted ya tiene un proyecto inscrito. Volver a proyectos"\n\n    return dict(proyecto=idProyecto,estudianteID=idEstudiante,mensaje=mensaje)\n\ndef registrarProyectoComoEstudiante():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    proyectoInscrito = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    if not proyectoInscrito:\n        db.t_cursa.insert(f_estudiante=idEstudiante,f_project=idProyecto,f_state="2")\n        mensaje = "Registro de proyecto exitoso. Volver a proyectos"\n    else:\n        mensaje = "Usted ya tiene un proyecto inscrito. Volver a proyectos"\n\n    return dict(proyecto=idProyecto,estudianteID=idEstudiante,mensaje=mensaje)\n\n@auth.requires_membership(\'Administrador\')\ndef comunidad_manage():\n    form = SQLFORM.smartgrid(db.t_comunidad,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_membership(\'Administrador\')\ndef area_manage():\n    form = SQLFORM.smartgrid(db.t_area,onupdate=auth.archive)\n    return locals()\n\ndef estudiante_manage():\n    form = SQLFORM.smartgrid(db.t_estudiante.id==request.args(0))\n    if form.process().accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n    return locals()\n\ndef proponente_manage():\n    form = SQLFORM.smartgrid(db.t_proponente,onupdate=auth.archive)\n    return locals()\n\ndef tutor_manage():\n    form = SQLFORM.smartgrid(db.t_tutor,onupdate=auth.archive)\n    return locals()\n\ndef proyecto_manage():\n    form = SQLFORM.smartgrid(db.t_proyecto,onupdate=auth.archive)\n    return locals()\n\ndef condicion_manage():\n    form = SQLFORM.smartgrid(db.t_condicion,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef caracterisicas_manage():\n    form = SQLFORM.smartgrid(db.t_caracterisicas,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef cursa_manage():\n    form = SQLFORM.smartgrid(db.t_cursa,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef carrera_manage():\n    form = SQLFORM.smartgrid(db.t_carrera,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef tipoprop_manage():\n    form = SQLFORM.smartgrid(db.t_tipoprop,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef relacionestproy_manage():\n    form = SQLFORM.smartgrid(db.t_relacionestproy,onupdate=auth.archive)\n    return locals()\n\ndef sedesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_sede.id==x).select())\n\n\ndef estudianteProyectos():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_estudiante.id==x).select(),proyectos=db().select(db.t_proyecto.ALL),estudianteID=x)\n\ndef estudianteInscribeProyectos():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_estudiante.id==x).select(),proyectos=db().select(db.t_proyecto.ALL),estudianteID=x)\n\n\ndef estudiantesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_estudiante.id==x).select(),estudianteId=x)\n\ndef tutoresDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_tutor.id==x).select())\n\ndef proyectosDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_proyecto.id==x).select())\n\ndef proyectosDetallesEstudiantes():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_proyecto.id==x).select())\n\ndef proponentesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_proponente.id==x).select())\n\ndef areasDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_area.id==x).select())\n\ndef comunidadesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_comunidad.id==x).select())\n\ndef estudiantesEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid):\n            form.errors.f_usbid = \'El formato v\xc3\xa1lido de carnet es: 00-00000\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    record = db.t_estudiante(request.args[0])\n    form = SQLFORM(db.t_estudiante, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef estudiantesEditarPerfil():\n    def my_form_processing(form):\n        if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid):\n            form.errors.f_usbid = \'El formato v\xc3\xa1lido de carnet es: 00-00000\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_estudiante(request.args[0])\n    form = SQLFORM(db.t_estudiante, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef areasEditar():\n    def my_form_processing(form):\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    record = db.t_area(request.args[0])\n    form = SQLFORM(db.t_area, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef sedesEditar():\n    def my_form_processing(form):\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    record = db.t_sede(request.args[0])\n    form = SQLFORM(db.t_sede, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\n# def vista_admin():\n#     msj= \'Bienvenid@ %s %s\' % (auth.user.first_name,auth.user.last_name)\n\n#     if auth.has_membership(\'Proponentes\'):\n#         redirect(URL(\'vista_proponente\'))\n\ndef proponentesEditar():\n    def my_form_processing(form):\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_proponente(request.args[0])\n    form = SQLFORM(db.t_proponente, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef tutoresEditar():\n    def my_form_processing(form):\n        if form.vars.f_usbid:\n            if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid) and not re.match(\'[a-zA-Z0-9_.+-]+\', form.vars.f_usbid):\n                form.errors.f_usbid = \'usbid invalido\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_tutor(request.args[0])\n    form = SQLFORM(db.t_tutor, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'El tutor ha sido eliminado\')\n    return dict(form = form)\n\n\ndef proyectosEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d{4}\', form.vars.f_codigo):\n            form.errors.f_codigo = \'El formato v\xc3\xa1lido del c\xc3\xb3digo son 4 d\xc3\xadgitos\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_descripcion):\n            form.errors.f_descripcion = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'\\d+\', form.vars.f_version):\n            form.errors.f_version = \'El formato v\xc3\xa1lido de la versi\xc3\xb3n son 2 d\xc3\xadgitos\'\n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_proyecto(request.args[0])\n    form = SQLFORM(db.t_proyecto, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'El proyecto ha sido eliminada\')\n    return dict(form = form)\n\ndef comunidadesEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d\', form.vars.f_cantidadbeneficiados):\n            form.errors.f_cantidadbeneficiados = \'Debe ser un n\xc3\xbamero\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_comunidad(request.args[0])\n    form = SQLFORM(db.t_comunidad, record, deletable = True)\n    if form.process(nvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La comunidad ha sido eliminada\')\n    return dict(form = form)\n\n########################################################################################\n################## syscorp\n########################################################################################\ndef proyectos_tutor_comunitario():\n    tutor     = db.auth_user(auth.user_id)\n    msj       = \'Bienvenid@ %s %s\' % (tutor.first_name,tutor.last_name)\n    proyectos = db(db.t_proyecto_tutor_comunitario.f_tutor==tutor).select()\n    return dict(bienvenida=msj,proyectos=proyectos)\n\ndef proyecto_tutor_comunitario():\n    tutor       = db.auth_user(auth.user_id)\n    id_proy     = request.vars.proy\n    proyecto    = db(db.t_proyecto.id==id_proy).select().first()\n    msj         = \'Bienvenid@ %s %s\' % (tutor.first_name,tutor.last_name)\n    estudiantes = db(db.t_estudiante.id==db.t_cursa.f_estudiante)(db.t_cursa.f_proyecto==id_proy).select()\n    return dict(estudiantes=estudiantes,bienvenida=msj,proyecto=proyecto)\n\n#AJAX confirmacion de actividad\ndef confirmar_actividad():\n    actividad = db(db.t_actividad_estudiante.id==request.vars.id).update(f_confirmada=True)\n    return ""\n\ndef bitacora_de_estudiante():\n    tutor      = db.auth_user(auth.user_id)\n    msj        = \'Bienvenid@ %s %s\' % (tutor.first_name,tutor.last_name)\n    id_est     = request.vars.est\n    proyecto   = db(db.t_cursa.f_estudiante==id_est and db.t_cursa.f_proyecto==request.vars.proy).select().first()\n    estudiante = db(db.t_estudiante.id==id_est).select().first()\n    bitacora   = db(db.t_actividad_estudiante.f_cursa==proyecto)(db.t_actividad_estudiante.f_realizada==True).select()\n    return dict(bienvenida=msj,bitacora=bitacora,estudiante=estudiante,proyecto=proyecto)\n\n#AJAX completar actividad\ndef completar_actividad():\n    actividad = db(db.t_actividad_estudiante.id==request.vars.id).update(f_realizada=True)\n    return ""\n\n#@auth.requires_membership(\'Estudiantes\')\ndef estado_estudiante():\n    usuario    = db.auth_user(auth.user_id)\n    msj        = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    estt = db(db.t_universitario.f_usuario==usuario).select().first()\n    estudiante = db(db.t_estudiante.f_universitario==estt).select().first()\n    #Proyecto\n    try:\n        proyectos = db(db.t_cursa.f_estudiante==estudiante.id).select()\n        proyectos = proyectos[0]\n        proyecto = proyectos\n        proy = proyectos.f_proyecto\n    except:\n        proyecto = None\n        proy = None\n\n    #Tutores\n    tutor_comunitario = []\n    for obj in db(db.t_proyecto_tutor_comunitario.f_proyecto==proy).select():\n        tutor_comunitario.append(obj.f_tutor.first_name + " " + obj.f_tutor.last_name)\n\n    tutor = []\n    for obj in db(db.t_proyecto_tutor.f_proyecto==proy).select():\n        tutor.append(obj.f_tutor.first_name + " " + obj.f_tutor.last_name)\n\n    #Actividades\n    actividades = db(db.t_actividad_estudiante.f_cursa==proyectos.id).select()\n\n    #PlanesOperativosPorActividad\n    planoperativo = []\n    horas_realizadas = 0\n\n    for row in actividades:\n        planoperativo.append(db(db.t_plan_operativo.f_actividad==row.f_actividad).select())\n        if row.f_realizada:\n            horas_realizadas += int(row.f_horas)\n\n    if request.env.request_method ==\'POST\':\n        if form.process(onvalidation=my_form_processing, keepvalues=True).accepted:\n            response.flash = \'form accepted\'\n        elif form.errors:\n            response.flash = \'form has errors\'\n        else:\n            response.flash = \'please fill out the form\'\n    return dict(rows=usuario, bienvenida=msj,estudianteId=estudiante.id, tutor=", ".join(tutor),\n                proyecto=proyecto, actividades=actividades, planoperativo=planoperativo,\n                horas_realizadas=horas_realizadas, tutor_comunitario=", ".join(tutor_comunitario),)\n\ndef vista_estudiante():\n    usuario    = db.auth_user(auth.user_id)\n    msj        = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    estt       = db(db.t_universitario.f_usuario==usuario).select().first()\n    estudiante = db(db.t_estudiante.f_universitario==estt).select().first()\n\n    try:\n        cursa = db(db.t_cursa.f_estudiante==estudiante.id, db.t_cursa.f_valido=="Invalido").select()\n        cursa = cursa[0]\n        if not cursa:\n            cursa = db(db.t_cursa.f_estudiante==estudiante.id, db.t_cursa.f_valido=="Valido").select()\n            cursa = cursa[0]\n        proyecto = cursa.f_proyecto\n    except:\n        proyecto = None\n        cursa = None\n\n    print cursa\n\n    # Buscamos todas las actividades de todos los proyectos que alguna vez realiz\xc3\xb3 el estudiante.\n    horas_realizadas = 0\n    todos_los_proyectos = db(db.t_cursa.f_estudiante==estudiante).select()\n    for proy in todos_los_proyectos:\n        todas_actividades = db(db.t_actividad_estudiante.f_cursa==proy).select()\n        for acti in todas_actividades:\n            if acti.f_realizada:\n                horas_realizadas += int(acti.f_horas)\n    pInscrito = \'vacio\'\n    pActividad = \'no\'\n    tutor = None\n    proyectoInscrito = db(db.t_cursa.f_estudiante==estudiante).select().first()\n    #cursa = db(db.t_cursa.f_estudiante==estudiante).select()\n    actividad = None\n    if proyecto:\n        actividad = db(db.t_actividad_estudiante.f_cursa==proyectoInscrito).select()\n    if actividad:\n        pActividad = \'si\'\n    if proyectoInscrito:\n        pInscrito = \'proyecto inscrito\'\n        tutor = db(db.t_inscripcion.f_estudiante==estudiante).select().first()\n        aprob_tutor = tutor.f_estado\n        aprob_coord = cursa.f_valido\n    else:\n        aprob_tutor = \'tutorVacio\'\n        aprob_coord = \'coordVacio\'\n\n    estudianteId = estudiante.id\n    return dict(usuario,estudianteId=estudianteId,horas=horas_realizadas,estudiante=estudiante,\n                bienvenida=msj,proyecto=proyecto,pInscrito=pInscrito,pActividad=pActividad,\n                aprob_tutor=aprob_tutor,aprob_coord=aprob_coord,cursa=cursa,tutor=tutor)\n\ndef retirar_proyecto():\n    x = long (request.args[0])\n    usuario = db.auth_user(auth.user_id)\n    msj     = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    estt    = db(db.t_universitario.f_usuario==usuario).select().first()\n    usuario = db(db.t_estudiante.f_universitario==estt).select().first()\n    proyecto  = db(db.t_cursa.f_estudiante==usuario)(db.t_cursa.f_proyecto==x).select().first()\n    horas = 50\n    todas_actividades = db(db.t_actividad_estudiante.f_cursa==proyecto).select()\n    for acti in todas_actividades:\n        if acti.f_realizada:\n            horas += int(acti.f_horas)\n    return dict(estudiante=usuario, bienvenida=msj,proyecto=proyecto,horas=horas)\n\ndef retiro():\n    x = long (request.args[1])\n    retiro = db(db.t_cursa.f_estudiante==request.vars.id and db.t_cursa.f_estado==\'Aprobado\').update(f_estado=\'Retirado\',f_fecha=datetime.datetime.today())\n    redirect(URL(\'retirar_proyecto\',args=[x]))\n    return ""\n\ndef culminar_proyecto():\n    x = long (request.args[0])\n    usuario  = db.auth_user(auth.user_id)\n    msj      = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    estt = db(db.t_universitario.f_usuario==usuario).select().first()\n    usuario = db(db.t_estudiante.f_universitario==estt).select().first()\n    proyecto = db(db.t_cursa.f_estudiante==usuario)(db.t_cursa.f_proyecto==x).select().first()\n    error = None\n\n    form = SQLFORM.factory(Field(\'f_informe\',\'upload\',uploadfolder=request.folder+\'static/pdfs\',label=T(\'Informe\'),requires = [IS_LENGTH(maxsize=2097152),IS_UPLOAD_FILENAME(extension=\'pdf\')]))\n    if form.process(session=None, formname=\'test\').accepted:\n        if form.vars.f_informe:\n            db(db.t_estudiante.f_universitario==auth.user.id).update(f_informe=form.vars.f_informe)\n            db(db.t_cursa.f_estudiante==usuario).update(f_estado="Culminado",f_fecha=datetime.datetime.today())\n            return redirect(URL(\'culminar_proyecto\',args=[x]))\n        print(\'form accepted\')\n    elif form.errors:\n        error = "El informe debe estar en formato pdf y no ser mayor a 2Mb"\n        print(\'form has errors\')\n    else:\n        print(\'please fill the form\')\n\n    # Buscamos todas las actividades de todos los proyectos que alguna vez realiz\xc3\xb3 el estudiante.\n    horas_realizadas = 0\n    todos_los_proyectos = db(db.t_cursa.f_estudiante==usuario).select()\n    for proy in todos_los_proyectos:\n        todas_actividades = db(db.t_actividad_estudiante.f_cursa==proy).select()\n        for acti in todas_actividades:\n            if acti.f_realizada:\n                horas_realizadas += int(acti.f_horas)\n    return dict(horas=horas_realizadas,error=error, estudiante=usuario, bienvenida=msj,proyecto=proyecto)\n\n############# PDF\ndef encabezado(canvas,doc):\n    canvas.saveState()\n    canvas.setFont(\'Times-Roman\',9)\n    logo = os.path.join(os.path.dirname(os.path.abspath(__file__)), \'../static/img/DEX.png\')\n    canvas.drawImage(logo, 68, A4[1]-104, 120, 74)\n    canvas.drawString(inch, A4[1]-114, "COORDINACI\xc3\x93N DE  EXTENSI\xc3\x93N SEDE LITORAL")\n    canvas.drawString(inch, A4[1]-124, "PROGRAMA ACCI\xc3\x93N SOCIAL Y SERVICIO COMUNITARIO")\n    canvas.drawString(inch, A4[1]-128, \'_\'*100)\n    canvas.restoreState()\n\ndef pie(canvas,doc):\n    canvas.saveState()\n    canvas.setFont(\'Times-Roman\',9)\n    canvas.drawString(inch, 0.86 * inch, \'_\'*100)\n    canvas.drawString(inch, 0.72 * inch, "Valle de Camur\xc3\xad Grande. Edf. Laboratorios Pesados. Piso 2. Ofic LPD 208l. Telf.: 0212-9069170.")\n    canvas.drawString(inch, 0.60 * inch, "Web: http://www.cfgc.dex.usb.ve | E-mail: psc-sl@usb.ve")\n    canvas.restoreState()\n\ndef generarPdfConstanciaRetiro():\n    x = long (request.args[0])\n    y = long (request.args[1])\n    est   = db(db.t_estudiante.id==x).select().first()\n    proy  = db(db.t_proyecto.id==y).select().first()\n    tutor = db(db.t_proyecto_tutor.f_proyecto==proy).select().first()\n    tutor = tutor.f_tutor\n\n    USBID     = est.f_universitario.f_usbid\n    Nombre    = est.f_universitario.f_usuario.first_name\n    Apellido  = est.f_universitario.f_usuario.last_name\n    Carrera   = est.f_carrera\n    codigo_pr = proy.id\n    nombre_pr = proy.f_nombre\n    descripcion_pr = proy.f_resumen\n    horas = 0\n    todas_actividades = db(db.t_actividad_estudiante.f_cursa==proy).select()\n    for acti in todas_actividades:\n        if acti.f_realizada:\n            horas += int(acti.f_horas)\n\n    comunidad_pr  = proy.f_comunidad\n\n    title = "CERTIFICACION DE RETIRO DE SERVICIO COMUNITARIO"\n\n    styles = getSampleStyleSheet()\n    styles.add(ParagraphStyle(name=\'test\',fontName=\'Times-Roman\',spaceBefore=5,spaceAfter=2,alignment=TA_JUSTIFY))\n    styles.add(ParagraphStyle(name=\'titulo\',fontName=\'Times-Bold\',spaceBefore=20,fontSize=12,spaceAfter=16,alignment=TA_CENTER))\n    tmpfilename=os.path.join(request.folder,\'private\',str(uuid4()))\n\n    story = []\n    story.append(NextPageTemplate(\'Culminacion\'))\n    story.append(Paragraph(escape(title),styles["titulo"]))\n    story.append(Paragraph(escape(\'APELLIDO Y NOMBRE DEL ESTUDIANTE: \' + str(Apellido) +\', \'+ str(Nombre)),styles["test"]))\n    story.append(Paragraph(escape(\'CARNET: \' + str(USBID)),styles["test"]))\n    story.append(Paragraph(escape(\'CARRERA: \' + str(Carrera)),styles["test"]))\n    story.append(Paragraph(escape(\'TITULO DEL PROYECTO DE SERVICIO COMUNITARIO: \' + str(nombre_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'C\xc3\x93DIGO: \' + str(codigo_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'COMUNIDAD BENEFICIADA: \' +str(comunidad_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'APELLIDO Y NOMBRE DEL TUTOR ACAD\xc3\x89MICO: \'+str(tutor.first_name)+\', \'+str(tutor.last_name)),styles["test"]))\n    story.append(Paragraph(escape(\'C\xc3\x89DULA DE IDENTIDAD DEL TUTOR ACAD\xc3\x89MICO: \'+str(tutor.f_cedula)),styles["test"]))\n    story.append(Paragraph(escape(\'CERTIFICO QUE EL ESTUDIANTE CUMPLI\xc3\x93 CON LOS OBJETIVOS PLANTEADOS DURANTE EL \\\n        DESARROLLO DEL PROYECTO DE SERVICIO COMUNITARIO POR UN LAPSO DE \'+ str(horas)+\' HORAS, COMO LO ESTABLECE EL \\\n        REGLAMENTO DE FORMACI\xc3\x93N COMPLEMENTARIA PROFESIONAL EN SU SECCI\xc3\x93N 2 DEL SERVICIO COMUNITARIO EN SU ART\xc3\x8dCULO 24 \\\n        PAR\xc3\x81GRAFO EVALUACI\xc3\x93N.\'),styles["test"]))\n    story.append(Paragraph(escape(\'CONFORME:\'),styles["test"]))\n    story.append(Spacer(0,0.6*inch))\n    t = Table([\n        [\'_\'*30,\'_\'*30],\n        [\'Firma del Tutor ACAD\xc3\x89MICO\\n(Firma y Sello del Dpto. Adscripci\xc3\xb3n)\', \'Validaci\xc3\xb3n de CFGC o COORDEXT\\n(Firma y Sello )\']\n        ], colWidths=160, rowHeights=16)\n    t2 = Table([\n        [\'FECHA DE LA CERTIFICACI\xc3\x93N:  \'+\'_\'*42],\n        [\'OBSERVACIONES:  \'+\'_\'*54],\n        [\'_\'*72],\n        [\'_\'*72]\n        ], rowHeights=22)\n    t.setStyle(TableStyle([\n                        (\'VALIGN\',(0,0),(-1,-1),\'TOP\'),\n                        (\'ALIGN\',(0,-1),(-1,-1),\'CENTER\'),\n                        (\'FONTNAME\',(0,0),(-1,-1),\'Times-Roman\'),\n                        ]))\n    t2.setStyle(TableStyle([(\'FONTNAME\',(0,0),(-1,-1),\'Times-Roman\')]))\n    story.append(t)\n    story.append(Spacer(0,0.4*inch))\n    story.append(t2)\n\n    frameN = Frame(inch, inch, 451, 630, id=\'normal\')\n    PTCulminacion = PageTemplate(id=\'Culminacion\', frames=frameN, onPage=encabezado, onPageEnd=pie)\n    doc = BaseDocTemplate(tmpfilename, pageTemplates=[PTCulminacion])\n    doc.build(story)\n    data = open(tmpfilename,"rb").read()\n    os.unlink(tmpfilename)\n    response.headers[\'Content-Type\']=\'application/pdf\'\n    return data\n\ndef generarPdfConstanciaCulminacion():\n    x = long (request.args[0])\n    y = long (request.args[1])\n    est   = db(db.t_estudiante.id==x).select().first()\n    proy  = db(db.t_proyecto.id==y).select().first()\n    tutor = db(db.t_proyecto_tutor.f_proyecto==proy).select().first()\n    tutor = tutor.f_tutor\n\n    USBID     = est.f_universitario.f_usbid\n    Nombre    = est.f_universitario.f_usuario.first_name\n    Apellido  = est.f_universitario.f_usuario.last_name\n    Carrera   = est.f_carrera\n    codigo_pr = proy.id\n    nombre_pr = proy.f_nombre\n    descripcion_pr = proy.f_resumen\n    horas = 0\n    todas_actividades = db(db.t_actividad_estudiante.f_cursa==proy).select()\n    for acti in todas_actividades:\n        if acti.f_realizada:\n            horas += int(acti.f_horas)\n\n    comunidad_pr  = proy.f_comunidad\n\n    title = "CERTIFICACION DE CUMPLIMIENTO DE SERVICIO COMUNITARIO"\n\n    styles = getSampleStyleSheet()\n    styles.add(ParagraphStyle(name=\'test\',fontName=\'Times-Roman\',spaceBefore=5,spaceAfter=2,alignment=TA_JUSTIFY))\n    styles.add(ParagraphStyle(name=\'titulo\',fontName=\'Times-Bold\',spaceBefore=20,fontSize=12,spaceAfter=16,alignment=TA_CENTER))\n    tmpfilename=os.path.join(request.folder,\'private\',str(uuid4()))\n\n    story = []\n    story.append(NextPageTemplate(\'Culminacion\'))\n    story.append(Paragraph(escape(title),styles["titulo"]))\n    story.append(Paragraph(escape(\'APELLIDO Y NOMBRE DEL ESTUDIANTE: \' + str(Apellido) +\', \'+ str(Nombre)),styles["test"]))\n    story.append(Paragraph(escape(\'CARNET: \' + str(USBID)),styles["test"]))\n    story.append(Paragraph(escape(\'CARRERA: \' + str(Carrera)),styles["test"]))\n    story.append(Paragraph(escape(\'TITULO DEL PROYECTO DE SERVICIO COMUNITARIO: \' + str(nombre_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'C\xc3\x93DIGO: \' + str(codigo_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'COMUNIDAD BENEFICIADA: \' +str(comunidad_pr)),styles["test"]))\n    story.append(Paragraph(escape(\'APELLIDO Y NOMBRE DEL TUTOR ACAD\xc3\x89MICO: \'+str(tutor.first_name)+\', \'+str(tutor.last_name)),styles["test"]))\n    story.append(Paragraph(escape(\'C\xc3\x89DULA DE IDENTIDAD DEL TUTOR ACAD\xc3\x89MICO: \'+str(tutor.f_cedula)),styles["test"]))\n    story.append(Paragraph(escape(\'CERTIFICO QUE EL ESTUDIANTE CUMPLI\xc3\x93 CON LOS OBJETIVOS PLANTEADOS DURANTE EL \\\n        DESARROLLO DEL PROYECTO DE SERVICIO COMUNITARIO POR UN LAPSO DE \'+ str(horas)+\' HORAS, COMO LO ESTABLECE EL \\\n        REGLAMENTO DE FORMACI\xc3\x93N COMPLEMENTARIA PROFESIONAL EN SU SECCI\xc3\x93N 2 DEL SERVICIO COMUNITARIO EN SU ART\xc3\x8dCULO 24 \\\n        PAR\xc3\x81GRAFO EVALUACI\xc3\x93N.\'),styles["test"]))\n    story.append(Paragraph(escape(\'CONFORME:\'),styles["test"]))\n    story.append(Spacer(0,0.6*inch))\n    t = Table([\n        [\'_\'*30,\'_\'*30],\n        [\'Firma del Tutor ACAD\xc3\x89MICO\\n(Firma y Sello del Dpto. Adscripci\xc3\xb3n)\', \'Validaci\xc3\xb3n de CFGC o COORDEXT\\n(Firma y Sello )\']\n        ], colWidths=160, rowHeights=16)\n    t2 = Table([\n        [\'FECHA DE LA CERTIFICACI\xc3\x93N:  \'+\'_\'*42],\n        [\'OBSERVACIONES:  \'+\'_\'*54],\n        [\'_\'*72],\n        [\'_\'*72]\n        ], rowHeights=22)\n    t.setStyle(TableStyle([\n                        (\'VALIGN\',(0,0),(-1,-1),\'TOP\'),\n                        (\'ALIGN\',(0,-1),(-1,-1),\'CENTER\'),\n                        (\'FONTNAME\',(0,0),(-1,-1),\'Times-Roman\'),\n                        ]))\n    t2.setStyle(TableStyle([(\'FONTNAME\',(0,0),(-1,-1),\'Times-Roman\')]))\n    story.append(t)\n    story.append(Spacer(0,0.4*inch))\n    story.append(t2)\n\n    frameN = Frame(inch, inch, 451, 630, id=\'normal\')\n    PTCulminacion = PageTemplate(id=\'Culminacion\', frames=frameN, onPage=encabezado, onPageEnd=pie)\n    doc = BaseDocTemplate(tmpfilename, pageTemplates=[PTCulminacion])\n    doc.build(story)\n    data = open(tmpfilename,"rb").read()\n    os.unlink(tmpfilename)\n    response.headers[\'Content-Type\']=\'application/pdf\'\n    return data\n\n########################################################################################\n################## final syscorp\n########################################################################################\n\ndef genPDF(base_url=\'applications/SIGESC/templates_pdf/planillaAval/\', template_html=\'template.html\',template_css=\'template.css\', output="out.pdf",variables=dict()):\n    template = open(base_url+template_html).read()\n    contenido = template.format(**variables)\n    weasyprint.HTML(string=contenido,base_url=base_url).render(stylesheets=[base_url+template_css]).write_pdf(output)\n    pdf = open(output).read()\n    os.remove(output)\n    return pdf\n\ndef proponenteProyecto():\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name,auth.user.last_name)\n    idProponente = db(db.t_proponente.f_user==auth.user).select()\n    return dict(proyectos = db(db.t_project.f_proponente==idProponente[0]).select(), bienvenida=msj)\n\n\ndef solicitudes_tutor():\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n    idTutor = db(db.t_universitario.f_usuario == auth.user).select().first()\n    idTutorAcademico = db(db.t_tutor_academico.f_universitario == idTutor).select().first()\n    listaProyectosTutores = db(db.t_proyecto_tutor.f_tutor == idTutorAcademico).select()\n    listaInscripcion = []\n    listaEnviados = []\n    for proy in listaProyectosTutores:\n        listaInscripcion += db(db.t_inscripcion.f_proyecto == proy.f_proyecto).select()\n    for ins in listaInscripcion:\n        act = []\n        cursa = db(db.t_cursa.f_estudiante==ins.f_estudiante).select().first()\n        act += db(db.t_actividad_estudiante.f_cursa==cursa.id).select()\n        if act:\n            listaEnviados += [ins]\n    return dict(proyectos = listaProyectosTutores, bienvenida=msj,listaInscripcion=listaInscripcion,enviados=listaEnviados)\n\n\ndef solicitud_constancia_coordinacion():\n    estudianteCursa = db(db.t_cursa).select()\n    print \'----> \', estudianteCursa\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n\n    return dict(bienvenida=msj,estudianteCursa=estudianteCursa)\n\ndef solicitud_plan_de_trabajo():\n    idEstudiante = request.args[1]\n    idProyecto = request.args[0]\n    proyecto = db(db.t_proyecto.id==idProyecto).select()\n    estudiante = db(db.t_estudiante.id==idEstudiante).select()\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n    idTutor = db(db.t_universitario.f_usuario == auth.user).select().first()\n    idTutorAcademico = db(db.t_tutor_academico.f_universitario == idTutor).select().first()\n    listaProyectosTutores = db(db.t_proyecto_tutor.f_tutor == idTutorAcademico).select()\n    listaInscripcion = []\n    for proy in listaProyectosTutores:\n        listaInscripcion += db(db.t_inscripcion.f_proyecto == proy.f_proyecto).select()\n\n    listaActividades = db(db.t_actividad.f_proyecto==idProyecto).select()\n    inscripcion = db(db.t_inscripcion.f_estudiante == idEstudiante).select()\n\n    listaStringActividades = \'\'\n    for celda in listaActividades:\n        listaStringActividades += (str((celda.id))) + \'/\'\n\n    return dict(proyectos = listaProyectosTutores,bienvenida=msj,listaInscripcion=listaInscripcion,\n                estudiante=estudiante[0],proyecto=proyecto[0],listaActividades=listaActividades,\n                inscripcion=inscripcion[0],idProyecto=idProyecto,estudianteID=idEstudiante,\n                listaStringActividades=listaStringActividades)\n\ndef enviarPlanTrabajo():\n    idProyecto = request.args[0]\n    idEstudiante = request.args[1]\n    lista = []\n    listaHoras = []\n    tope = (len(request.args)-3)/3\n    for i in range(tope):\n        if request.args[i+2+tope+1] == "1":\n            lista.append(request.args[i+2])\n            listaHoras.append(request.args[i+2+1+tope*2])\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n    mensaje = \'Plan de Trabajo enviado\'\n\n    idCursa = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    for j in range(len(lista)):\n        #idActividad = db(db.t_actividad.id==j).select()\n        db.t_actividad_estudiante.insert(f_cursa=idCursa[0],f_actividad=lista[j],f_horas=listaHoras[j])\n\n    return dict(idProyecto=idProyecto,estudianteID=idEstudiante,mensaje=mensaje,bienvenida=msj,lista=lista)\n\n@auth.requires_membership(\'Administrador\')\ndef moderarProyectos():\n    return dict(proyectos=db().select(db.t_cursa.ALL))\n\n\n@auth.requires_membership(\'Administrador\')\ndef proponentes():\n    def my_form_processing(form):\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n\n    form = SQLFORM(db.t_proponente)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, proponentes=db(db.t_proponente.f_estado=="Activo").select(),message=T(response.flash))\n\n\n@auth.requires_login()\ndef estado_manage():\n    form = SQLFORM.smartgrid(db.t_estado,onupdate=auth.archive)\n    return dict(form=form)\n\n\n@auth.requires_membership(\'Administrador\')\ndef proyectos():\n    def my_form_processing(form):\n        if not re.match(\'\\d{4}\', form.vars.f_codigo):\n            form.errors.f_codigo = \'El formato v\xc3\xa1lido del c\xc3\xb3digo son 4 d\xc3\xadgitos\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_descripcion):\n            form.errors.f_descripcion = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'\\d+\', form.vars.f_version):\n            form.errors.f_version = \'El formato v\xc3\xa1lido de la versi\xc3\xb3n son 2 d\xc3\xadgitos\'\n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n    form = SQLFORM(db.t_project,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, proyectos=db(db.t_project.f_estado_del=="Activo").select(),message=T(response.flash))\n\n#@auth.requires(auth.has_membership(role=\'Administrador\') or auth.has_membership(role=\'Proponentes\'))\ndef propuestas():\n\n    es_adm = \'Administrador\' in auth.user_groups.values()\n    es_adm = es_adm or \'Coordinador\' in auth.user_groups.values() \n\n    if es_adm:\n        propuestas = [\n            {\n                \'id\': p.f_proyecto,\n                \'nombre\': db.t_proyecto(p.f_proyecto).f_nombre,\n                \'estado\': p.f_estado_propuesta\n            } for p in db(db.t_propuesta).select()\n        ]\n    else:\n        propuestas = [\n            {\n                \'id\': p.f_proyecto,\n                \'nombre\': db.t_proyecto(p.f_proyecto).f_nombre,\n                \'estado\': p.f_estado_propuesta\n            } for p in db(db.t_propuesta.f_proponente==auth.user.id).select()\n        ]\n    return dict(\n        es_adm = es_adm,\n        propuestas=propuestas,\n        message=T(response.flash)\n    )\n\ndef fixJSON(json,arrayNames):\n    for arrayName in arrayNames:\n        pattern = r"{}\\[(\\d+)\\]\\[(.*)\\]".format(arrayName)\n        tmp = {}\n        tam_array = -1\n        array = []\n\n        for key in json:\n            if arrayName+"[" in key:\n                match = re.search(pattern,key)\n                i = match.group(1)\n                tam_array = max(tam_array, int(i))\n                tmp[key] = json[key]\n\n        if tam_array >= 0:\n            array += [{} for i in range(tam_array+1)]\n\n            for key in tmp:\n                match = re.search(pattern,key)\n                i = int(match.group(1))\n                k = match.group(2)\n                array[i][k] = tmp[key]\n\n        json[arrayName] = array\n\n    simpleArrayKeys = []\n    for key in json:\n        if \'[]\' in key:\n            simpleArrayKeys += [key]\n    for key in simpleArrayKeys:\n        json[key.replace(\'[]\',\'\')] = json[key]\n        del json[key]\n\n    return json\n\n\ndef propuestasDetalles():\n    proyecto_id = long (request.args[0])\n    propuesta = db(db.t_propuesta.f_proyecto ==proyecto_id).select().first()\n    proyecto =  db(db.t_proyecto.id == propuesta.f_proyecto).select().first()\n    actividades = db(db.t_actividad.f_proyecto == proyecto_id).select()\n    objetivos = db(db.t_objetivo.f_proyecto == proyecto_id).select()\n    plan_operativo = db(db.t_plan_operativo.f_proyecto == proyecto_id).select()\n    tutores = db(\n        db.t_proyecto_tutor.f_proyecto == proyecto_id and\n        db.auth_user.id==db.t_proyecto_tutor.f_tutor\n    ).select()\n\n    tutores_comunitarios = db(\n        db.t_proyecto_tutor_comunitario.f_proyecto == proyecto_id and\n        db.auth_user.id==db.t_proyecto_tutor_comunitario.f_tutor\n    ).select()\n\n\n    return dict(\n        propuesta = propuesta,\n        proyecto = proyecto,\n        actividades = actividades,\n        objetivos = objetivos,\n        plan_operativo = plan_operativo,\n        tutores = tutores,\n        tutores_comunitarios = tutores_comunitarios\n    )\n\n\ndef propuestasEditar():\n    proyecto_id = long(request.args[0])\n    redirect(URL(\'propuestasCrear\',vars=dict(proyecto_id=proyecto_id)))\n\ndef propuestaPredecesor():\n\n    proyectos = db(\n        db.t_proyecto.id==db.t_proyecto_aprobado.f_proyecto\n    ).select()\n\n    if not proyectos:\n        redirect(URL(\'propuestasCrear\'))\n\n    idViejo = request.vars.proyectoPredecesor\n\n    if idViejo:\n        proyectoViejo = db.t_proyecto(idViejo)\n        proyecto_fields = proyectoViejo.as_dict()\n        del proyecto_fields[\'id\']\n        proyecto_fields[\'f_continuacion\'] = True\n        proyecto_id = db.t_proyecto.insert(**proyecto_fields)\n        db.t_propuesta.insert(f_proyecto=proyecto_id)\n        redirect(URL(\'propuestasCrear\',vars=dict(proyecto_id=proyecto_id)))\n\n    return dict(\n        proyectos=proyectos\n    )\n\n\ndef propuestasCrear():\n    response.generic_patterns = [\'json\']\n    es_adm = \'Coordinador\' in auth.user_groups.values()\n    es_adm = es_adm or \'Administrador\' in auth.user_groups.values()\n    es_adm = es_adm or \'Administrador Dex\' in auth.user_groups.values()\n    es_adm = es_adm or \'Asistente\' in auth.user_groups.values()\n\n    # Obtener p\xc3\xa1gina actual\n    pag = int(request.vars.pag) if \'pag\' in request.vars else 1\n\n    form_paginas = {\n        1: [\n            \'f_nombre\',\n            \'f_continuacion\',\n            \'f_resumen\',\n            \'f_area\',\n            \'f_area_carrera\',\n            \'f_relacion_planes\',\n            \'f_estado\',\n            \'f_fechaini\',\n            \'f_fechafin\',\n            \'f_sede\',\n            \'f_proponente\'\n        ],\n        2: [\n            \'f_antecedentes\',\n            \'f_comunidad\',\n            \'f_obj_generales\',\n            \'f_poblacion_beneficiaria\',\n            \'f_justificacion\',\n            \'f_logros_sociales\',\n            \'f_impacto_social\',\n            \'f_evaluacion\',\n            \'f_difusion_resultados\',\n            \'objetivos_especificos\'\n        ],\n        3: [\n            \'f_aplicacion_dir_ley\',\n            \'f_obj_aprendizaje\',\n            \'f_num_requeridos\',\n            \'f_tutores\',\n            \'f_tutores_comunitarios\'\n        ],\n        4: [\n            \'f_relevancia\',\n            \'f_originalidad\',\n            \'f_capacidad_ejecutora\',\n            \'f_asoc_externa\',\n            \'f_asoc_interna\',\n            \'f_incorporacion_estudiantes\',\n            \'f_incorporacion_profesores\',\n            \'f_incorporacion_empleados\',\n            \'f_incorporacion_obreros\'\n        ],\n        5: [\'actividades\'],\n        6: [\'plan_operativo\',\n            \'f_observaciones\',\n            \'f_estado_propuesta\'\n        ]\n    }\n\n\n    def propuestasGuardar(proyecto_id):\n        tutores, tutores_comunitarios = [], []\n\n        k_del = []\n\n        for k in form.vars:\n            if k not in form_paginas[pag]:\n                k_del += [k]\n\n        for k in k_del:\n            del form.vars[k]\n\n\n        if not form.vars.f_proponente:\n            form.vars.f_proponente = auth.user.id\n        if not form.vars.f_estado_propuesta:\n            form.vars.f_estado_propuesta = "Incompleta"\n        if not form.vars.f_nombre and proyecto_id:\n            form.vars.f_nombre = db.t_proyecto(proyecto_id).f_nombre\n        if not form.vars.f_observaciones and proyecto_id:\n            form.vars.f_observaciones = db(db.t_propuesta.f_proyecto==proyecto_id).select().first().f_observaciones\n\n        proyecto_fields = db.t_proyecto._filter_fields(form.vars)\n\n        if proyecto_fields:\n            if not proyecto_id:\n                print("Nuevo proyecto")\n                proyecto_id = db.t_proyecto.insert(**proyecto_fields)\n            else:\n                print("Actualizar proyecto {}".format(proyecto_id))\n                print(proyecto_fields)\n                db(db.t_proyecto.id==proyecto_id).update(\n                    **proyecto_fields)\n\n        form.vars.f_proyecto = proyecto_id\n\n        propuesta = db(db.t_propuesta.f_proyecto==proyecto_id).select()\n        if propuesta:\n            propuesta_id = propuesta[0].id\n            db(db.t_propuesta.id==propuesta_id).update(\n                **db.t_propuesta._filter_fields(form.vars))\n        else:\n            propuesta_id = db.t_propuesta.insert(\n                **db.t_propuesta._filter_fields(form.vars))\n\n        propuesta = db.t_propuesta(propuesta_id)\n\n        print("Proyecto",proyecto_id,"Propuesta",propuesta_id)\n        tutores = form.vars.f_tutores\n        tutores_comunitarios = form.vars.f_tutores_comunitarios\n        print("Tutores",tutores,tutores_comunitarios)\n        if propuesta_id and proyecto_id:\n            if tutores:\n                db(db.t_proyecto_tutor.f_proyecto==proyecto_id).delete()\n                if isinstance(tutores,str):\n                    tutores = [tutores]\n                for tutor_id in tutores:\n                    print("tutor id", tutor_id)\n                    db.t_proyecto_tutor.insert(\n                        f_proyecto=proyecto_id,\n                        f_tutor=tutor_id\n                    )\n\n            if tutores_comunitarios:\n                db(db.t_proyecto_tutor_comunitario.f_proyecto==proyecto_id).delete()\n                if isinstance(tutores_comunitarios,str):\n                    tutores_comunitarios = [tutores_comunitarios]\n                for tutor_id in tutores_comunitarios:\n                    print("tutor com id", tutor_id)\n                    db.t_proyecto_tutor_comunitario.insert(\n                        f_proyecto=proyecto_id,\n                        f_tutor=tutor_id\n                    )\n            # Insertar actividades\n            if request.post_vars.actividades:\n                db(db.t_actividad.f_proyecto==proyecto_id).delete()\n                for actividad in request.post_vars.actividades:\n                    actividad[\'f_proyecto\'] = proyecto_id\n                    actividad_id = db.t_actividad.insert(**actividad)\n                    print("Actividad", actividad_id)\n            if request.post_vars.objetivos_especificos:\n                db(db.t_objetivo.f_proyecto==proyecto_id).delete()\n                for objetivo in request.post_vars.objetivos_especificos:\n                    objetivo[\'f_proyecto\'] = proyecto_id\n                    objetivo_id = db.t_objetivo.insert(**objetivo)\n                    print("Objetivo", objetivo_id)\n            if request.post_vars.plan_operativo:\n                db(db.t_plan_operativo.f_proyecto==proyecto_id).delete()\n                for fila in request.post_vars.plan_operativo:\n                    fila[\'f_proyecto\'] = proyecto_id\n                    fila = db.t_plan_operativo._filter_fields(fila)\n                    obj = db.t_objetivo(fila[\'f_objetivo\'])\n                    act = db.t_actividad(fila[\'f_actividad\'])\n                    if obj and act:\n                        fila_id = db.t_plan_operativo.insert(**fila)\n                        print("Fila PO", fila_id)\n\n        # Chequear si el proyecto fue validado\n        if propuesta.f_estado_propuesta in [\'Aprobado\', \'Aprobado con observaciones\']:\n            print("Aprobando")\n            codigo_area = db.t_area(db.t_proyecto(proyecto_id).f_area).f_codigo\n            codigo = "{area}{proyecto_id}{ano}".format(area=codigo_area, proyecto_id=proyecto_id, ano=datetime.datetime.now().year%2000)\n            db.t_proyecto_aprobado.update_or_insert(db.t_proyecto_aprobado.f_proyecto==proyecto_id,\n                f_proyecto=proyecto_id,\n                f_codigo=codigo,\n                f_estado_proyecto=\'Activo\'\n            )\n        else:\n            r = db(db.t_proyecto_aprobado.f_proyecto==proyecto_id).select()\n            print(r)\n            if r:\n                print("Desaprobando proyecto")\n                db(db.t_proyecto_aprobado.f_proyecto==proyecto_id).delete()\n        return dict(\n            form=form,\n            tutores=tutores,\n            tutores_comunitarios=tutores_comunitarios,\n            proyecto_id = proyecto_id,\n            propuesta_id = propuesta_id,\n        )\n\n    #fix arrays\n    request.post_vars = fixJSON(request.post_vars,["plan_operativo","actividades","objetivos_especificos"])\n    accion = request.vars.accion\n    proyecto_id = int(request.vars.proyecto_id) if \'proyecto_id\' in request.vars else 0\n    propuesta_id = db(db.t_propuesta.f_proyecto==proyecto_id).select().first().id if proyecto_id else 0\n\n    actividades = request.post_vars.actividades\n    obj_especificos = request.post_vars.objetivos_especificos\n    plan_operativo = request.post_vars.plan_operativo\n\n    actividades_db = db(db.t_actividad.f_proyecto==proyecto_id).select()\n    obj_especificos_db = db(db.t_objetivo.f_proyecto==proyecto_id).select()\n    plan_operativo_db = db(db.t_plan_operativo.f_proyecto==proyecto_id).select()\n\n    if accion not in [\'guardar\',\'registrar\']:\n        if proyecto_id:\n            actividades = actividades_db\n            obj_especificos = obj_especificos_db\n            plan_operativo = plan_operativo_db\n\n    if pag == 6:\n        # Las actividades y objetivos del plan operativo deben pertenecer al proyecto:\n        db.t_plan_operativo.f_actividad.requires = IS_EMPTY_OR(IS_IN_SET([(a.id,a.f_nombre) for a in actividades_db]))\n        db.t_plan_operativo.f_objetivo.requires = IS_EMPTY_OR(IS_IN_SET([(o.id,o.f_objetivo) for o in obj_especificos_db]))\n\n\n    # Obtener lista de todos los tutores\n    lista_tutores = [(tutor.id, \'{} {}\'.format(tutor.first_name,tutor.last_name)) for tutor in db(db.auth_user.f_tipo == \'Docente\').select()]\n    lista_tutores_comunitarios = [(tutor.id, \'{} {}\'.format(tutor.first_name,tutor.last_name)) for tutor in db(db.auth_user).select()]\n\n    # Crear form\n    if pag < 6:\n        db.t_propuesta.f_proponente.notnull = False\n        db.t_propuesta.f_proponente.requires = None\n\n        form = SQLFORM.factory(\n            db.t_proyecto,\n            db.t_propuesta,\n            Field(\n                \'f_tutores\',\n                requires=IS_IN_SET(lista_tutores, multiple=True)\n            ),\n            Field(\n                \'f_tutores_comunitarios\',\n                requires=IS_IN_SET(lista_tutores_comunitarios, multiple=True)\n            ), _class="form-horizontal"\n        )\n\n        # Agregar clases de bootstrap a los input\n        for inp in form.elements(\'input, textarea, select\'):\n            inp[\'_class\'] = \'form-control\'\n\n    else:\n        db.t_propuesta.f_proponente.requires = None\n        db.t_plan_operativo.f_meta.requires = None\n        db.t_plan_operativo.f_recursos.requires = None\n        db.t_plan_operativo.f_resultados_esperados.requires = None\n        db.t_plan_operativo.f_tiempo.requires = None\n\n        form = SQLFORM.factory(db.t_plan_operativo, db.t_propuesta)\n        # Agregar clases de bootstrap a los input y js\n        for inp in form.elements(\'input, textarea, select\'):\n            inp[\'_class\'] = \'form-plan form-control\'\n\n    if proyecto_id:\n        print("form tutores",request.vars.f_tutores,request.vars.f_tutores_comunitarios)\n        if not form.vars.f_tutores:\n            tutores_proyecto = [str(t.f_tutor)\n                for t in db(\n                    db.t_proyecto_tutor.f_proyecto == proyecto_id\n                ).select()\n            ]\n        else:\n            tutores_proyecto = form.vars.f_tutores\n        select_tutor = form.element(\'select\', _name="f_tutores")\n        if select_tutor:\n            tutor_opts = select_tutor.elements(\'option\')\n            for opt in tutor_opts:\n                opt[\'_selected\'] = opt[\'_value\'] in tutores_proyecto\n\n        if not form.vars.f_tutores_comunitarios:\n            tutores_proyecto = [str(t.f_tutor)\n                for t in db(\n                    db.t_proyecto_tutor_comunitario.f_proyecto == proyecto_id\n                ).select()\n            ]\n        else:\n            tutores_proyecto = form.vars.f_tutores_comunitarios\n        print("Tutores com",tutores_proyecto)\n        select_tutor = form.element(\'select\',_name=\'f_tutores_comunitarios\')\n        if select_tutor:\n            tutor_opts = select_tutor.elements(\'option\')\n            for opt in tutor_opts:\n                opt[\'_selected\'] = opt[\'_value\'] in tutores_proyecto\n\n    print("form.vars tutores", [k for k in form.vars])\n    res = dict(\n        form=form,\n        pag= pag,\n        es_adm= es_adm,\n        message=T(response.flash),\n        actividades=actividades,\n        obj_especificos=obj_especificos,\n        plan_operativo=plan_operativo,\n        tutores=[],\n        tutores_comunitarios=[],\n        proyecto_id=proyecto_id,\n        propuesta_id=propuesta_id,\n        actividades_js = "[]",\n        obj_especificos_js = "[]",\n        plan_operativo_js = "[]",\n        estado_propuesta = ""\n    )\n    def soft_validation(form):\n        print("Validaci\xc3\xb3n suave")\n        print(form.vars.f_nombre,proyecto_id)\n        if not form.vars.f_nombre and pag == 1:\n            form.errors.f_nombre = "Este campo no puede estar vac\xc3\xado"         \n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n\n        return form\n\n    def hard_validation(form):\n        print("Validaci\xc3\xb3n fuerte")\n        proyecto = db.t_proyecto(form.vars.f_proyecto)\n        propuesta = db(db.t_propuesta.f_proyecto==proyecto.id).select()[0]\n        actividades = db(db.t_actividad.f_proyecto==proyecto_id).select()\n        obj_especificos = db(db.t_objetivo.f_proyecto==proyecto_id).select()\n        # Esta validaci\xc3\xb3n ocurre con el plan que se envia\n        plan_operativo = request.post_vars.plan_operativo\n\n        for f in db.t_proyecto:\n            f = str(f).replace(\'t_proyecto.\',\'\')\n            if f != \'f_continuacion\' and not proyecto[f]:\n                form.errors[f] = "Este campo no puede estar vac\xc3\xado"\n        for f in db.t_propuesta:\n            f = str(f).replace(\'t_propuesta.\',\'\')\n            if not propuesta[f] and f != \'f_observaciones\':\n                form.errors[f] = "Este campo no puede estar vac\xc3\xado"\n        for actividad in actividades:\n            for f in db.t_actividad:\n                f = str(f).replace(\'t_actividad.\',\'\')\n                if not actividad[f] and f != \'f_requerimientos\':\n                    form.errors[f] = "Este campo no puede estar vac\xc3\xado"\n        for objetivo in obj_especificos:\n            for f in db.t_objetivo:\n                f = str(f).replace(\'t_objetivo.\',\'\')\n                if not objetivo[f]:\n                    form.errors[f] = "Este campo no puede estar vac\xc3\xado"\n\n        if not actividades:\n            form.errors[\'actividades\'] = \'No ha registrado ninguna actividad\'\n        if not obj_especificos:\n            form.errors[\'objetivos\'] = \'No ha registrado ningun objetivo espec\xc3\xadfico\'\n        if not plan_operativo:\n            form.errors[\'plan_operativo\'] = \'No ha registrado el plan operativo\'\n\n        print(form.errors)\n        return form\n\n    if accion == "registrar":\n        def form_validation(form):\n            form = hard_validation(form)\n    elif accion == "guardar":\n        def form_validation(form):\n            form = soft_validation(form)\n    else:\n        # Set form values to project record\n        if proyecto_id:\n            form.vars = db.t_proyecto(proyecto_id)\n            if form.vars.f_fechaini:\n                form.vars.f_fechaini = form.vars.f_fechaini.strftime(\'%d/%m/%Y\')\n            if form.vars.f_fechafin:\n                form.vars.f_fechafin = form.vars.f_fechafin.strftime(\'%d/%m/%Y\')\n        def form_validation(form):\n            form = form # funci\xc3\xb3n de mentira\n\n\n    if form.process(onvalidation=form_validation, keepvalues=True).accepted:\n        print("Paso la validacion")\n        if accion == "guardar":\n            res.update(propuestasGuardar(proyecto_id))\n            response.flash = \'1\'\n        elif accion == "registrar":\n            res.update(propuestasGuardar(proyecto_id))\n            propuesta = db.t_propuesta(res[\'propuesta_id\'])\n            print(propuesta)\n            if propuesta.f_estado_propuesta == \'Incompleta\':\n                db(db.t_propuesta.id==res[\'propuesta_id\']).update(\n                    f_estado_propuesta = \'En espera del aval\'\n                )\n                res[\'estado_propuesta\'] = \'En espera del aval\'\n            else:\n                res[\'estado_propuesta\'] = propuesta.f_estado_propuesta \n            response.flash = \'1\'\n    else:\n        print("Fallo la validacion", form.errors)\n        response.flash = \'0\'\n\n    # Pasarle los datos como json para tenerlo en js\n    if isinstance(actividades, gluon.dal.Rows):\n        res[\'actividades_js\'] = actividades.as_json()\n\n    if isinstance(obj_especificos, gluon.dal.Rows):\n        res[\'obj_especificos_js\'] = obj_especificos.as_json()\n\n    if isinstance(plan_operativo, gluon.dal.Rows):\n        res[\'plan_operativo_js\'] = plan_operativo.as_json()\n\n    # Clasificar errores por pagina\n    errors_pag = {1:{},2:{},3:{},4:{},5:{},6:{}}\n    for field in form.errors:\n        p = 1\n        for pag in form_paginas:\n            if field in form_paginas[pag]:\n                p = pag\n                break\n        label = db.t_proyecto[field].label if field in db.t_proyecto else field\n        if field in db.t_propuesta:\n            label = db.t_propuesta[field].label\n        if field == \'objetivos\':\n            label = \'Objetivos espec\xc3\xadficos\'\n        elif field == \'actividades\':\n            label = \'Actividades\'\n        elif field == \'plan_operativo\':\n            label = \'Plan Operativo\'\n\n        errors_pag[p][str(label)] = form.errors[field]\n\n    print(errors_pag)\n\n    res[\'errors\'] = errors_pag\n    return res\n\ndef generarPlanillaAval():\n    proyecto_id = long(request.args(0))\n    proyecto = db.t_proyecto(proyecto_id)\n    propuesta = db(db.t_propuesta.f_proyecto==proyecto_id).select().first()\n    proponente = db.auth_user(propuesta.f_proponente)\n    print (proponente)\n    response.headers[\'Content-Type\'] = \'application/pdf; charset=UTF-8\'\n    pdf = genPDF(\n        variables=dict(\n            nombre=\'{} {}\'.format(proponente.first_name,proponente.last_name),\n            telefono="",\n            dependencia=\'Coordinaci\xc3\xb3n de carrera\'\n        )\n    )\n    return pdf\n\n\ndef propuestaPDF():\n    base_url=\'applications/SIGESC/templates_pdf/propuesta/\'\n    template_css=\'template.css\'\n    output="out.pdf"\n    if request.post_vars:\n        response.headers[\'Content-Type\'] = \'application/pdf; charset=UTF-8\'\n        pdf = weasyprint.HTML(string=request.post_vars.html).render(stylesheets=[base_url+template_css]).write_pdf()\n        return pdf\n        \n@auth.requires_membership(\'Administrador\')\ndef comunidades():\n    def my_form_processing(form):\n        if not re.match(\'\\d\', form.vars.f_cantidadbeneficiados):\n            form.errors.f_cantidadbeneficiados = \'Debe ser un n\xc3\xbamero\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    form = SQLFORM(db.t_comunidad,onupdate=auth.archive)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'1\'\n\n    elif form.errors:\n        response.flash = \'0\'\n\n    else:\n        response.flash = \'Llene el formulario\'\n    return dict(form=form, comunidades=db(db.t_comunidad.f_estado_del=="Activo").select(),message=T(response.flash))\n\n\ndef estudianteCursa():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    form = SQLFORM(db.t_cursa,fields = [\'f_estudiante\',\'f_proyecto\'])\n    form.vars.f_estudiante = idEstudiante\n    form.vars.f_proyecto = idProyecto\n\n    if form.process(keepvalues=True).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n\n    #formulario = FORM(\'Tu nombre:\', INPUT(_name=\'nombre\'), INPUT(_type=\'submit\'))\n\n    #db.define_table(\'kldhbvjgfe\',\n    #    Field(\'edad\', requires=IS_IN_SET([\'0\', \'1\', \'2\'])))\n\n    #formulario = SQLFORM(db.kldhbvjgfe)\n\n    return dict(proyecto=db(db.t_proyecto_aprobado.id==idProyecto).select()[0],estudianteId=idEstudiante,idProyecto=idProyecto)\n\ndef cursa():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    estado = db(db.t_relacionestproy).select().first()\n    form = SQLFORM(db.t_cursa,fields = [\'f_estudiante\',\'f_project\',\'f_estado\'])\n    form.vars.f_estudiante = idEstudiante\n    form.vars.f_project = idProyecto\n    form.vars.f_state = estado\n\n    if form.process(keepvalues=True).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n\n    return dict(proyectos=db(db.t_project.id==idProyecto).select(),estudianteID=idEstudiante,idProyecto=idProyecto)\n\n@auth.requires_membership(\'Administrador\')\ndef validarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_state="2",f_valido="Valido")\n    return dict(proyecto=idProyecto)\n\ndef validacionProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_valido="Activo")\n    return dict(proyecto=idProyecto)\n\ndef solicitarValidacion():\n    idProyecto = long(request.args[0])\n    return dict(proyecto=idProyecto)\n\ndef validacionConstanciaInicioEstudiante():\n    x = long (request.args[0])\n    y = long (request.args[1])\n    hola="hola"\n\n    est = db(db.t_inscripcion.f_estudiante==x).select()\n    proyInscr = db(db.t_cursa.f_estudiante==x).select()\n    if not proyInscr:\n        mensaje=("No tiene inscrito ning\xc3\xban proyecto.")\n    elif est[0].f_aprobacion=="Pendiente":\n        mensaje=("Falta aprobaci\xc3\xb3n del Tutor y de la Coordinaci\xc3\xb3n.")\n    else:\n        mensaje=("Falta aprobaci\xc3\xb3n de la Coordinaci\xc3\xb3n")\n    return dict(bienvenida=hola, mensaje=mensaje)\n\ndef solicitarValidacionEstudiante():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    validacionRealizada = db(db.t_inscripcion.f_estudiante==idEstudiante).select()\n    inscProyRealizado = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    if inscProyRealizado:\n        if not validacionRealizada:\n            db.t_inscripcion.insert(f_estudiante=idEstudiante,f_project=idProyecto,f_state="2")\n            mensaje = "Solicitud de validaci\xc3\xb3n procesada exitosamente. Volver al Men\xc3\xba"\n        else:\n            mensaje = "Solicitud ya realizada. Volver al Men\xc3\xba"\n    else:\n        mensaje = "No tiene algun proyecto inscrito. Volver al Men\xc3\xba"\n    return dict(proyecto=idProyecto, mensaje=mensaje)\n\ndef estudiante_plan_trabajo():\n    #idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[0])\n    listaActividades = []\n    cursa = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    listaActividades = db(db.t_actividad_estudiante.f_cursa==cursa[0].id).select()\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n    return dict(listaActividades=listaActividades,bienvenida=msj,idEstudiante=idEstudiante)\n\ndef rechazar_solicitud_tutor():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    estudiante = db(db.t_estudiante.id==idEstudiante).select().first()\n    print \'>>>>>> \', estudiante.f_universitario.f_usuario.first_name\n    return dict(proyecto=db(db.t_proyecto.id==idProyecto).select()[0], estudiante=estudiante)\n\ndef aprobar_solicitud_coordinacion():\n    #idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[0])\n    db(db.t_cursa.f_estudiante==idEstudiante).update(f_valido=\'Valido\')\n    db(db.t_cursa.f_estudiante==idEstudiante).update(f_estado=\'Aprobado\')\n    msj = \'Bienvenid@ %s %s\' % (auth.user.first_name, auth.user.last_name)\n    return dict(bienvenida=msj)\n\ndef eliminar_inscripcion():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    db(db.t_cursa.f_estudiante==idEstudiante).delete()\n    db(db.t_inscripcion.f_estudiante==idEstudiante).delete()\n    mensaje="Solicitud rechazada. Volver a solicitudes."\n\n    return dict(proyecto=idProyecto, mensaje=mensaje)\n\ndef aceptarPlanTrabajo():\n    estado = request.args[0]\n    idEstudiante = long(request.args[1])\n    if estado == \'aceptado\':\n        mensaje="Plan de trabajo aceptado con \xc3\xa9xito. Volver."\n        db(db.t_inscripcion.f_estudiante==idEstudiante).update(f_estado=\'Aprobado\')\n        db(db.t_cursa.f_estudiante==idEstudiante).update(f_valido=\'Pendiente\')\n    else:\n        mensaje="Se ha rechazado el plan de trabajo. Volver."\n        cursa = db(db.t_cursa.f_estudiante==idEstudiante).select()\n        db(db.t_actividad_estudiante.f_cursa==cursa[0].id).delete()\n\n    return dict( mensaje=mensaje,estado=estado)\n\ndef rechazarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    db(db.t_cursa.id==idProyecto).update(f_state="3")\n    return dict(proyecto=idProyecto)\n\ndef registrarProyectoEstudiante():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    proyectoInscrito = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    if not proyectoInscrito:\n        db.t_cursa.insert(f_estudiante=idEstudiante,f_project=idProyecto,f_state="2")\n        mensaje = "Registro de proyecto exitoso. Volver al Men\xc3\xba"\n    else:\n        mensaje = "Usted ya tiene un proyecto inscrito. Volver al Men\xc3\xba"\n\n    return dict(proyecto=idProyecto,estudianteID=idEstudiante,mensaje=mensaje)\n\ndef registrarProyectoComoEstudiante():\n    idProyecto = long(request.args[0])\n    idEstudiante = long(request.args[1])\n    dropdown = request.args[2]\n    proyectoInscrito = db(db.t_cursa.f_estudiante==idEstudiante).select()\n    if not proyectoInscrito or (proyectoInscrito[0].f_estado=="Retirado"):\n        db.t_cursa.insert(f_estudiante=idEstudiante,f_proyecto=idProyecto,f_estado="Pendiente")\n        mensaje = "Registro de proyecto exitoso. Volver al Men\xc3\xba"\n        db.t_inscripcion.insert(f_estudiante=idEstudiante,f_proyecto=idProyecto,f_estado="Pendiente",f_horas = dropdown)\n    else:\n        mensaje = "Usted ya tiene un proyecto inscrito. Volver al Men\xc3\xba"\n\n    return dict(proyecto=idProyecto,estudianteID=idEstudiante,mensaje=mensaje,dropdown=dropdown)\n\n@auth.requires_membership(\'Administrador\')\ndef sede_manage():\n    form = SQLFORM.smartgrid(db.t_sede,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_membership(\'Administrador\')\ndef comunidad_manage():\n    form = SQLFORM.smartgrid(db.t_comunidad,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_membership(\'Administrador\')\ndef area_manage():\n    form = SQLFORM.smartgrid(db.t_area,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_membership(\'Administrador\')\ndef sexo_manage():\n    form = SQLFORM.smartgrid(db.t_sexo,onupdate=auth.archive)\n    return locals()\n\n\ndef estudiante_manage():\n    form = SQLFORM.smartgrid(db.t_estudiante.id==request.args(0))\n    if form.process().accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n    return locals()\n\ndef proponente_manage():\n    form = SQLFORM.smartgrid(db.t_proponente,onupdate=auth.archive)\n    return locals()\n\ndef tutor_manage():\n    form = SQLFORM.smartgrid(db.t_tutor,onupdate=auth.archive)\n    return locals()\n\ndef proyecto_manage():\n    form = SQLFORM.smartgrid(db.t_proyecto,onupdate=auth.archive)\n    return locals()\n\ndef condicion_manage():\n    form = SQLFORM.smartgrid(db.t_condicion,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef caracterisicas_manage():\n    form = SQLFORM.smartgrid(db.t_caracterisicas,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef cursa_manage():\n    form = SQLFORM.smartgrid(db.t_cursa,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef carrera_manage():\n    form = SQLFORM.smartgrid(db.t_carrera,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef tipoprop_manage():\n    form = SQLFORM.smartgrid(db.t_tipoprop,onupdate=auth.archive)\n    return locals()\n\n@auth.requires_login()\ndef relacionestproy_manage():\n    form = SQLFORM.smartgrid(db.t_relacionestproy,onupdate=auth.archive)\n    return locals()\n\ndef sedesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_sede.id==x).select())\n\n\ndef estudianteProyectos():\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_estudiante.id==x).select())\n    return dict(rows = db(db.t_estudiante.id==x).select(),proyectos=db().select(db.t_project.ALL),estudianteID=x)\n\ndef estudianteInscribeProyectos():\n    x = long (request.args[0])\n    usuario    = db.auth_user(auth.user_id)\n    msj        = \'Bienvenid@ %s %s\' % (usuario.first_name,usuario.last_name)\n    #return dict(rows = db(db.t_estudiante.id==x).select())\n    mensaje="Registro de proyecto exitoso. Volver al Men\xc3\xba"\n    return dict(proyectos=db().select(db.t_proyecto_aprobado.ALL),estudianteId=x, mensaje=mensaje,bienvenida=msj)\n\n\ndef estudiantesDetalles():\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_estudiante.id==x).select())\n    return dict(rows = db(db.t_estudiante.id==x).select(),estudianteId=x)\n\ndef tutoresDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_tutor.id==x).select())\n\n\ndef proyectosDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_proyecto.id==x).select())\n\ndef proyectosDetallesEstudiantes():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_project.id==x).select())\n\ndef proponentesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_proponente.id==x).select())\n\ndef areasDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_area.id==x).select())\n\ndef comunidadesDetalles():\n    x = long (request.args[0])\n    return dict(rows = db(db.t_comunidad.id==x).select())\n\ndef estudiantesEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid):\n            form.errors.f_usbid = \'El formato v\xc3\xa1lido de carnet es: 00-00000\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_estudiante(request.args[0])\n    form = SQLFORM(db.t_estudiante, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\n\ndef estudiantesEditarPerfil():\n    def my_form_processing(form):\n        if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid):\n            form.errors.f_usbid = \'El formato v\xc3\xa1lido de carnet es: 00-00000\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_estudiante(request.args[0])\n    form = SQLFORM(db.t_estudiante, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\n\ndef areasEditar():\n    def my_form_processing(form):\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_area(request.args[0])\n    form = SQLFORM(db.t_area, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef sedesEditar():\n    def my_form_processing(form):\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_sede(request.args[0])\n    form = SQLFORM(db.t_sede, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef proponentesEditar():\n    def my_form_processing(form):\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_proponente(request.args[0])\n    form = SQLFORM(db.t_proponente, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La sede ha sido eliminada\')\n    return dict(form = form)\n\ndef tutoresEditar():\n    def my_form_processing(form):\n        if form.vars.f_usbid:\n            if not re.match(\'\\d{2}-\\d{5}$\', form.vars.f_usbid) and not re.match(\'[a-zA-Z0-9_.+-]+\', form.vars.f_usbid):\n                form.errors.f_usbid = \'usbid invalido\'\n        if not re.match(\'[1-9][0-9]{0,8}$\', form.vars.f_cedula):\n            form.errors.f_cedula = \'El formato v\xc3\xa1lido de c\xc3\xa9dula es: 1232382\'\n        if not re.match(\'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\', form.vars.f_email):\n            form.errors.f_email = \'El formato v\xc3\xa1lido de email es example@example.com\'\n        if not re.match(\'\\d{7,13}\', form.vars.f_telefono):\n            form.errors.f_telefono = \'El formato v\xc3\xa1lido de telefono es 08002023223\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_tutor(request.args[0])\n    form = SQLFORM(db.t_tutor, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'El tutor ha sido eliminado\')\n    return dict(form = form)\n\n# TODO: vista\n@auth.requires(auth.has_membership(role=\'Administrador\') or auth.has_membership(role=\'Coordinador\'))\ndef propuestasEliminar():\n    propuesta_id = long (request.args[0])\n    record = db(db.t_propuesta.id==propuesta_id and db.t_propuesta.f_proponente==auth.user.id)\n    record.delete()\n\ndef proyectosEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d{4}\', form.vars.f_codigo):\n            form.errors.f_codigo = \'El formato v\xc3\xa1lido del c\xc3\xb3digo son 4 d\xc3\xadgitos\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_descripcion):\n            form.errors.f_descripcion = \'S\xc3\xb3lo puede contener letras\'\n        if not re.match(\'\\d+\', form.vars.f_version):\n            form.errors.f_version = \'El formato v\xc3\xa1lido de la versi\xc3\xb3n son 2 d\xc3\xadgitos\'\n        if form.vars.f_fechaini > form.vars.f_fechafin:\n            form.errors.f_fechaini = \'La fecha final del proyecto es menor que la inicial\'\n            form.errors.f_fechafin = \'La fecha final del proyecto es menor que la inicial\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_project(request.args[0])\n    form = SQLFORM(db.t_project, record, deletable = True)\n    if form.process(onvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'El proyecto ha sido eliminada\')\n    return dict(form = form)\n\ndef comunidadesEditar():\n    def my_form_processing(form):\n        if not re.match(\'\\d\', form.vars.f_cantidadbeneficiados):\n            form.errors.f_cantidadbeneficiados = \'Debe ser un n\xc3\xbamero\'\n        if not re.match(\'[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91]|[A-Z\xc3\x81\xc3\x89\xc3\x8d\xc3\x93\xc3\x9a\xc3\x91a]|[a-z\xc3\xb1\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba\xc3\xa4\xc3\xab\xc3\xaf\xc3\xb6\xc3\xbc]*$\', form.vars.f_nombre):\n            form.errors.f_nombre = \'S\xc3\xb3lo puede contener letras\'\n    x = long (request.args[0])\n    #return dict(rows = db(db.t_sede.id==x).select())\n    record = db.t_comunidad(request.args[0])\n    form = SQLFORM(db.t_comunidad, record, deletable = True)\n    if form.process(nvalidation=my_form_processing).accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    elif not record:\n        return dict(\'La comunidad ha sido eliminada\')\n    return dict(form = form)\n\ndef generarPdfConstanciaInicio():\n    x = long (request.args[0])\n    y = long (request.args[1])\n\n    est = db(db.t_estudiante.id==x).select()[0]\n    iduniv = est.f_universitario\n    universitario = db(db.t_universitario.id==iduniv).select()[0]\n    userest = db(db.auth_user.id==universitario.f_usuario).select()[0]\n    proyecto = db(db.t_proyecto.id==y).select()[0]\n    proyectotutor = db(db.t_proyecto_tutor.f_proyecto==proyecto.id).select()[0]\n    tutor = db(db.auth_user.id==proyectotutor.f_tutor).select()[0]\n    USBID = universitario.f_usbid\n    Nombre = userest.first_name\n    Apellido = userest.last_name\n    Cedula = userest.f_cedula\n    tlf = userest.f_telefono\n    direccion = userest.f_direccion\n\n    Carrera = est.f_carrera\n\n    Sede = est.f_sede\n\n    Sexo = \'Masculino\'\n\n    codigo_pr = \'PS1115\'\n    nombre_pr = proyecto.f_nombre\n    descripcion_pr = proyecto.f_resumen\n    area_pr = proyecto.f_area\n    estado_pr = \'Activo\'\n    fecha_ini = \'12/01/2016\'\n    fecha_fin = \'26/08/2016\'\n    #version_pr = proy[0].f_version\n    proponente_pr = \'Nombre proponente\'\n\n    tutor_pr_nombre = tutor.first_name\n    tutor_pr_apellido = tutor.last_name\n\n    comunidad_pr = proyecto.f_comunidad\n    PAGE_HEIGHT=defaultPageSize[1]; PAGE_WIDTH=defaultPageSize[0]\n    u = inch/10.0\n\n    inscProyRealizado = db(db.t_cursa.f_estudiante==x).select()\n\n    if inscProyRealizado and inscProyRealizado[0].f_valido=="Valido":\n\n        title = \'<font size=10><b><u>__CONSTANCIA DE INICIO DE SERVICIO COMUNITARIO__</u></b></font>\'\n        heading = "Datos del estudiante:"\n\n\n        styles = getSampleStyleSheet()\n        styles.add(ParagraphStyle(name=\'titles\', alignment=TA_CENTER))\n        styles.add(ParagraphStyle(name=\'logos\', alignment=TA_LEFT))\n        tmpfilename=os.path.join(request.folder,\'private\',str(uuid4()))\n        doc = SimpleDocTemplate(tmpfilename,pagesize=letter,\n                            rightMargin=72,leftMargin=72,\n                            topMargin=2,bottomMargin=18)\n        logo = os.path.join(os.path.dirname(os.path.abspath(__file__)), \'../static/img/logo_dex.png\')\n        salto = \'<br />\\n\'\n        #linea = \'__________________________________________________________________________________\'\n\n        story = []\n        im = Image(logo,width=90, height=60)\n        im.hAlign = \'LEFT\'\n        story.append(im)\n        story.append(Paragraph(salto,styles["Normal"]))\n        story.append(Paragraph(title,styles["titles"]))\n        #story.append(Paragraph(linea,styles["Normal"]))\n        story.append(Spacer(1,2*u))\n        story.append(Paragraph(escape(\'Per\xc3\xaddo:___________________________________ A\xc3\xb1o: ______________\'),styles["Normal"]))\n        story.append(Paragraph(escape(heading),styles["Heading2"]))\n        story.append(Paragraph(escape(\'Carn\xc3\xa9: \' + str(USBID)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Carrera: \' + str(Carrera)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Nombres: \' + str(Nombre)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Apellidos: \' + str(Apellido)),styles["Normal"]))\n        story.append(Paragraph(escape(\'C\xc3\xa9dula: \' + str(Cedula)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Tel\xc3\xa9fono: \' + str(tlf)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Direcci\xc3\xb3n: \' + str(direccion)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Sede: \' + str(Sede)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Sexo: \' + str(Sexo)),styles["Normal"]))\n\n        story.append(Paragraph(salto,styles["Normal"]))\n        story.append(Paragraph(escape(\'Informaci\xc3\xb3n del proyecto: \'),styles["Heading2"]))\n        story.append(Paragraph(escape(\'Nombre del proyecto: \' + str(nombre_pr)),styles["Normal"]))\n        story.append(Paragraph(escape(\'C\xc3\xb3digo del proyecto: \' + str(codigo_pr)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Tutor acad\xc3\xa9mico: \' +str(tutor_pr_nombre) + \' \' + str(tutor_pr_apellido)),styles["Normal"]))\n        story.append(Paragraph(escape(\'Comunidad: \' + str(comunidad_pr)),styles["Normal"]))\n\n\n        story.append(Spacer(1,2*inch))\n        doc.build(story)\n        data = open(tmpfilename,"rb").read()\n        os.unlink(tmpfilename)\n        response.headers[\'Content-Type\']=\'application/pdf\'\n        return data\n    else:\n        redirect(URL(f=\'validacionConstanciaInicioEstudiante\', args=[x,y]))\n        return mensaje\n\ndef myFirstPage(canvas, doc):\n canvas.saveState()\n canvas.setFont(\'Times-Bold\',16)\n #canvas.drawCentredString(PAGE_WIDTH/2.0, PAGE_HEIGHT-108, "EJEMPLO")\n canvas.setFont(\'Times-Roman\',9)\n canvas.drawString(inch, 0.75 * inch, "P\xc3\xa1gina / %s" % "info")\n canvas.restoreState()\n\ndef myLaterPages(canvas, doc):\n canvas.saveState()\n canvas.setFont(\'Times-Roman\',9)\n canvas.drawString(inch, 0.75 * inch, "Page %d %s" % (doc.page, pageinfo))\n canvas.restoreState()\n\ndef generarPdfConstanciaInscripcion():\n    x = long (request.args[0])\n    y = long (request.args[1])\n\n    est = db(db.t_estudiante.id==x).select()\n    #carr = db(est[0].f_carrera==db.t_carrera.id).select()\n    #sed = db(est[0].f_sede==db.t_sede.id).select()\n    sed = est[0].f_sede\n    #genero = db(est[0].f_sexo==db.t_sexo.id).select()\n    genero = est[0].f_sexo\n\n    proy = db(db.t_project.id==y).select()\n    tut = db(proy[0].f_tutor==db.t_tutor.id).select()\n    comu = db(proy[0].f_comunidad==db.t_comunidad.id).select()\n\n    USBID = est[0].f_usbid\n    Nombre = est[0].f_nombre\n    Apellido = est[0].f_apellido\n    Cedula = est[0].f_cedula\n    tlf = est[0].f_telefono\n    direccion = est[0].f_direccion\n\n    Carrera = carr[0].f_codigo\n\n    Sede = sed[0].f_nombre\n\n    Sexo = genero[0].f_tipo\n\n    codigo_pr = proy[0].f_codigo\n    nombre_pr = proy[0].f_nombre\n    descripcion_pr = proy[0].f_descripcion\n    area_pr = proy[0].f_area\n    estado_pr = proy[0].f_estado\n    fecha_ini = proy[0].f_fechaini\n    fecha_fin = proy[0].f_fechafin\n    version_pr = proy[0].f_version\n    proponente_pr = proy[0].f_proponente\n\n    tutor_pr_nombre = tut[0].f_nombre\n    tutor_pr_apellido = tut[0].f_apellido\n\n    comunidad_pr = comu[0].f_nombre\n\n    # Rutas para la creaci\xc3\xb3n del PDF\n    template_html=\'template_inscripcion_PDF/template.html\'\n    template_css=\'template_inscripcion_PDF/template.css\'\n    output="template_inscripcion_PDF/out1.pdf"\n    # Datos del usuario a insertar en la constancia\n    periodo = \'Enero-marzo\'\n    anio = \'2016\'\n    usbid = USBID\n    carrera = Carrera\n    nombre = Nombre\n    apellido = Apellido\n    ci = Cedula\n    telf_fijo = \'0243-272 39 62\'\n    telf_movil = est[0].f_telefono\n    email = est[0].f_email\n    direccion = direccion\n\n    nombreProyecto = nombre_pr\n    codigo = codigo_pr\n    ciudadBenef = proy[0].f_comunidad\n    repComunidad = \'Padre Juan\'\n    ciRepComuni = \'9.987.552\'\n\n    direccionRepComunidad= \'Santa Fe Valle Arriba\'\n    telfOficRepComunidad= \'0212-555 55 55\'\n    celRepComunidad= \'0416-555 55 55\'\n    emailRepComunidad= \'juan@gmail.com\'\n    tutorAca = tut[0].f_nombre\n    ciTutorAca = tut[0].f_cedula\n    dependencia = \'CFCG\'\n    telfOficTutorAca = tut[0].f_telefono\n    celTutorAca = \'555 55 55\'\n    emailTutorAca = tut[0].f_email\n    direccionOrgDesSoc = \'Santa Fe Valle Arriba\'\n    telfOficOrgDesSoc = \'0000 555 55 55\'\n    celOrgDesSoc = \'555 55 55\'\n    emailOrgDesSoc = \'comunidad@yahoo.com\'\n\n    listaActividad = db(db.t_actividad_estudiante.id==x).select()\n\n    # Diccionario con los valores que se insertaran en la vista\n    variables={\'periodo\':periodo,\'anio\':anio,\'usbid\':usbid,\'carrera\':carrera,\'nombre\':nombre,\'apellido\':apellido,\n\t\t\t\t\t\'ci\':ci,\'telf_fijo\':telf_fijo,\'telf_movil\':telf_movil,\'email\':email,\'direccion\':direccion,\n\t\t\t\t\t\'nombreProyecto\':nombreProyecto,\'codigo\':codigo,\'ciudadBenef\':ciudadBenef,\'repComunidad\':repComunidad,\n\t\t\t\t\t\'ciRepComuni\':ciRepComuni, \'direccionRepComunidad\':direccionRepComunidad,\'telfOficRepComunidad\':telfOficRepComunidad,\n\t\t\t\t\t\'celRepComunidad\':celRepComunidad,\'emailRepComunidad\':emailRepComunidad,\'tutorAca\':tutorAca,\n\t\t\t\t\t\'ciTutorAca\':ciTutorAca,\'dependencia\':dependencia,\'telfOficTutorAca\':telfOficTutorAca,\'celTutorAca\':celTutorAca,\n\t\t\t\t\t\'emailTutorAca\':emailTutorAca,\'direccionOrgDesSoc\':direccionOrgDesSoc,\'telfOficOrgDesSoc\':telfOficOrgDesSoc,\n\t\t\t\t\t\'celOrgDesSoc\':celOrgDesSoc,\'emailOrgDesSoc\':emailOrgDesSoc}\n    # Construye el PDF en un archivo temporal\n    html_template = open(template_html)\n    html_content = html_template.read().format(**variables)\n    open(\'tmp.html\',\'w\').write(html_content)\n    # Crea el PDF y elimina el temporal\n    subprocess.Popen(["weasyprint","tmp.html",output,"-s",template_css]).wait()\n    os.remove("tmp.html")\n    # Se abre el PDF creado y se muestra en la URL para que pueda descargarlo el usuario\n    data = open(output,"rb").read()\n    # Se elimina el PDF creado para que no ocupe espacio\n    os.unlink(output)\n    response.headers[\'Content-Type\']=\'application/pdf\'\n    # Muestra el PDF en la URL\n    return data\n\nresponse._vars=response._caller(generarPdfConstanciaInscripcion)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'args'
p24
S'()'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.AttributeError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.AttributeError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S''
sS'request'
p55
cgluon.html
XML_unpickle
p56
(S's\x01r\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>SIGESC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>8</div></td></tr><tr><td><div>3</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1-8eaaf628-7544-42f5-89b3-5f199868920f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sigesc</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTEXT_DOCUMENT_ROOT</td><td style="vertical-align:top;">:</td><td><div>/var/www/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTEXT_PREFIX</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">DOCUMENT_ROOT</td><td style="vertical-align:top;">:</td><td><div>/var/www/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">GATEWAY_INTERFACE</td><td style="vertical-align:top;">:</td><td><div>CGI/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8,en;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>_ga=GA1.2.286164031.1456444264; __utma=69842068.286164031.1456444264.1456444264.1462999129.2; __utmz=69842068.1456444264.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=158998949.286164031.1456444264.1463448840.1463448840.1; __utmz=158998949.1463448840.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); session_id_sigesc=190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a; session_id_admin=190.39.31.1-8eaaf628-7544-42f5-89b3-5f199868920f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>https://persevera.dex.usb.ve/SIGESC/default/vista_estudiante</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_TRANSLATED</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/wsgihandler.py/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>60347</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_SCHEME</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_URI</td><td style="vertical-align:top;">:</td><td><div>/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_FILENAME</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/wsgihandler.py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_ADDR</td><td style="vertical-align:top;">:</td><td><div>159.90.211.174</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_ADMIN</td><td style="vertical-align:top;">:</td><td><div>[no address given]</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SIGNATURE</td><td style="vertical-align:top;">:</td><td><div>&lt;address&gt;Apache/2.4.10 (Debian) Server at persevera.dex.usb.ve Port 443&lt;/address&gt;\n</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Apache/2.4.10 (Debian)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SSL_TLS_SNI</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">apache.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>10</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">apache_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>10</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/SIGESC/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">context_document_root</td><td style="vertical-align:top;">:</td><td><div>/var/www/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">context_prefix</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">document_root</td><td style="vertical-align:top;">:</td><td><div>/var/www/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gateway_interface</td><td style="vertical-align:top;">:</td><td><div>CGI/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8,en;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>_ga=GA1.2.286164031.1456444264; __utma=69842068.286164031.1456444264.1456444264.1462999129.2; __utmz=69842068.1456444264.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=158998949.286164031.1456444264.1463448840.1463448840.1; __utmz=158998949.1463448840.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); session_id_sigesc=190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a; session_id_admin=190.39.31.1-8eaaf628-7544-42f5-89b3-5f199868920f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>https://persevera.dex.usb.ve/SIGESC/default/vista_estudiante</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>persevera</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>159.90.211.174</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>persevera.dex.usb.ve</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.application_group</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve|</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.callable_object</td><td style="vertical-align:top;">:</td><td><div>application</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.daemon_connects</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.daemon_restarts</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.daemon_start</td><td style="vertical-align:top;">:</td><td><div>1464496248417100</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.enable_sendfile</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.handler_script</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.input_chunked</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.listener_host</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.listener_port</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.process_group</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.queue_start</td><td style="vertical-align:top;">:</td><td><div>1464496248416960</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.request_handler</td><td style="vertical-align:top;">:</td><td><div>wsgi-script</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.request_start</td><td style="vertical-align:top;">:</td><td><div>1464496248416756</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.script_reloading</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.script_start</td><td style="vertical-align:top;">:</td><td><div>1464496248417164</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>4</div></td></tr><tr><td><div>3</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_application_group</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve|</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_callable_object</td><td style="vertical-align:top;">:</td><td><div>application</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_daemon_connects</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_daemon_restarts</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_daemon_start</td><td style="vertical-align:top;">:</td><td><div>1464496248417100</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_enable_sendfile</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_handler_script</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_input_chunked</td><td style="vertical-align:top;">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_listener_host</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_listener_port</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_process_group</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_queue_start</td><td style="vertical-align:top;">:</td><td><div>1464496248416960</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_request_handler</td><td style="vertical-align:top;">:</td><td><div>wsgi-script</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_request_start</td><td style="vertical-align:top;">:</td><td><div>1464496248416756</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_script_reloading</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_script_start</td><td style="vertical-align:top;">:</td><td><div>1464496248417164</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">mod_wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>4</div></td></tr><tr><td><div>3</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_translated</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/wsgihandler.py/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>60347</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_scheme</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_filename</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/wsgihandler.py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_addr</td><td style="vertical-align:top;">:</td><td><div>159.90.211.174</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_admin</td><td style="vertical-align:top;">:</td><td><div>[no address given]</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_signature</td><td style="vertical-align:top;">:</td><td><div>&lt;address&gt;Apache/2.4.10 (Debian) Server at persevera.dex.usb.ve Port 443&lt;/address&gt;\n</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Apache/2.4.10 (Debian)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">ssl_tls_sni</td><td style="vertical-align:top;">:</td><td><div>persevera.dex.usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;mod_wsgi.Log object at 0x7f5c884eca50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;type &#x27;mod_wsgi.FileWrapper&#x27;&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;mod_wsgi.Input object at 0x7f5c8a3e5c70&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;mod_wsgi.Log object at 0x7f5c884eca50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;type &#x27;mod_wsgi.FileWrapper&#x27;&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;mod_wsgi.Input object at 0x7f5c8a3e5c70&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/SIGESC/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>generarPdfConstanciaInscripcion</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/SIGESC/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>persevera</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>159.90.211.174</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>persevera.dex.usb.ve</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 5, 29, 0, 0, 48, 417443)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/SIGESC/default/generarPdfConstanciaInscripcion/8/3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 5, 29, 4, 30, 48, 417478)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f5c8aa88c10&gt;</div></td></tr></table></div>'
tRp57
sS'frames'
p58
(lp59
(dp60
S'file'
p61
S'/home/www-data/web2py/gluon/restricted.py'
p62
sS'dump'
p63
(dp64
S'environment'
p65
S"{'A': <class 'gluon.html.A'>, 'A4': (595.275590551181, 841.8897637795275), 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'ActionFlowable': <class reportlab.platypus.doctemplate.ActionFlowable>, 'Actividad': <class __restricted__.Actividad>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, ...}"
p66
sS'ccode'
p67
S'<code object <module> at 0x7f5c8b4feab0, file "/...lications/SIGESC/controllers/default.py", line 2>'
p68
ssS'lnum'
p69
I227
sS'lines'
p70
(dp71
I224
S'            ccode = code'
p72
sI225
S'        else:'
p73
sI226
S'            ccode = compile2(code, layer)'
p74
sI227
S'        exec ccode in environment'
p75
sI228
S'    except HTTP:'
p76
sI229
S'        raise'
p77
sI230
S'    except RestrictedError:'
p78
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p79
sI222
S'    try:'
p80
sI223
S'        if isinstance(code, types.CodeType):'
p81
ssS'call'
p82
S"(code='# -*- coding: utf-8 -*-\\nimport re\\nimport gluon\\ni...esponse._caller(generarPdfConstanciaInscripcion)\\n', environment={'A': <class 'gluon.html.A'>, 'A4': (595.275590551181, 841.8897637795275), 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'ActionFlowable': <class reportlab.platypus.doctemplate.ActionFlowable>, 'Actividad': <class __restricted__.Actividad>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, ...}, layer='/home/www-data/web2py/applications/SIGESC/controllers/default.py')"
p83
sS'func'
p84
S'restricted'
p85
sa(dp86
g61
S'/home/www-data/web2py/applications/SIGESC/controllers/default.py'
p87
sg63
(dp88
sg69
I2550
sg70
(dp89
I2539
S'    # Crea el PDF y elimina el temporal'
p90
sI2540
S'    subprocess.Popen(["weasyprint","tmp.html",output,"-s",template_css]).wait()'
p91
sI2541
S'    os.remove("tmp.html")'
p92
sI2542
S'    # Se abre el PDF creado y se muestra en la URL para que pueda descargarlo el usuario'
p93
sI2543
S'    data = open(output,"rb").read()'
p94
sI2544
S'    # Se elimina el PDF creado para que no ocupe espacio'
p95
sI2545
S'    os.unlink(output)'
p96
sI2546
S"    response.headers['Content-Type']='application/pdf'"
p97
sI2547
S'    # Muestra el PDF en la URL'
p98
sI2548
S'    return data'
p99
ssg82
S'()'
p100
sg84
S'<module>'
p101
sa(dp102
g61
S'/home/www-data/web2py/gluon/globals.py'
p103
sg63
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function generarPdfConstanciaInscripcion>'
p107
ssg69
I417
sg70
(dp108
I416
S'        self._vars = None'
p109
sI417
S'        self._caller = lambda f: f()'
p110
sI418
S'        self._view_environment = None'
p111
sI419
S'        self._custom_commit = None'
p112
sI420
S'        self._custom_rollback = None'
p113
sI421
S"        self.generic_patterns = ['*']"
p114
sI412
S"        self.flash = ''            # used by the default view layout"
p115
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p116
sI414
S'        self.menu = []             # used by the default view layout'
p117
sI415
S'        self.files = []            # used by web2py_ajax.html'
p118
ssg82
S'(f=<function generarPdfConstanciaInscripcion>)'
p119
sg84
S'<lambda>'
p120
sa(dp121
g61
S'/home/www-data/web2py/applications/SIGESC/controllers/default.py'
p122
sg63
(dp123
S'].f_sexo'
p124
g106
sS'est'
p125
S'<Rows (1)>'
p126
sS'genero'
p127
g106
ssg69
I2452
sg70
(dp128
I2447
S'    est = db(db.t_estudiante.id==x).select()'
p129
sI2448
S'    #carr = db(est[0].f_carrera==db.t_carrera.id).select()'
p130
sI2449
S'    #sed = db(est[0].f_sede==db.t_sede.id).select()'
p131
sI2450
S'    sed = est[0].f_sede'
p132
sI2451
S'    #genero = db(est[0].f_sexo==db.t_sexo.id).select()'
p133
sI2452
S'    genero = est[0].f_sexo'
p134
sI2453
S''
sI2454
S'    proy = db(db.t_project.id==y).select()'
p135
sI2455
S'    tut = db(proy[0].f_tutor==db.t_tutor.id).select()'
p136
sI2456
S'    comu = db(proy[0].f_comunidad==db.t_comunidad.id).select()'
p137
ssg82
S'()'
p138
sg84
S'generarPdfConstanciaInscripcion'
p139
sa(dp140
g61
S'/home/www-data/web2py/gluon/packages/dal/pydal/objects.py'
p141
sg63
(dp142
S'builtinAttributeError'
p143
S"<type 'exceptions.AttributeError'>"
p144
ssg69
I90
sg70
(dp145
I85
S''
sI86
S'    def __getattr__(self, k):'
p146
sI87
S'        try:'
p147
sI88
S'            return self.__getitem__(k)'
p148
sI89
S'        except KeyError:'
p149
sI90
S'            raise AttributeError'
p150
sI91
S''
sI92
S'    def __copy__(self):'
p151
sI93
S'        return Row(self)'
p152
sI94
S''
ssg82
S"(self=<Row {'f_informe': '', 't_inscripcion': <Set (t_...sa': <Set (t_cursa.f_estudiante = 8)>, 'id': 8L}>, k='f_sexo')"
p153
sg84
S'__getattr__'
p154
sasS'pyver'
p155
S'Python 2.7.9: /usr/bin/python (prefix: /usr)'
p156
sS'session'
p157
g56
(S's\xc4\x0c\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>fe81a9b5-3396-4cce-be7f-05f59c3983aa</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 5, 28, 23, 54, 59, 245356)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>antonio@diaz.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">f_cedula</td><td style="vertical-align:top;">:</td><td><div>19284912</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">f_direccion</td><td style="vertical-align:top;">:</td><td><div>Caracas</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">f_foto</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">f_telefono</td><td style="vertical-align:top;">:</td><td><div>0239-2388765</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">f_tipo</td><td style="vertical-align:top;">:</td><td><div>Pregrado</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Antonio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>13L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Diaz</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>antoniodiaz</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.t_universitario.id&gt;0</div></td></tr></table></div>'
tRp158
sS'etype'
p159
S"<type 'exceptions.AttributeError'>"
p160
sS'date'
p161
S'Sun May 29 00:00:48 2016'
p162
sS'response'
p163
g56
(S's\xf6\'\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f5c8b108378&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_sigesc</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>\xc3\x8dndice</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Estado</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/estado_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Sede</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/sede_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Comunidad</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/comunidad_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Area</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/area_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Sexo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/sexo_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Estudiante</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/estudiante_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Proponente</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/proponente_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Tutor</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/tutor_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Proyecto</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/proyecto_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Condicion</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/condicion_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Caracterisicas</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/caracterisicas_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Cursa</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/cursa_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Carrera</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/carrera_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Tipoprop</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/tipoprop_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Relacionestproy</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SIGESC/default/relacionestproy_manage</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Roraima Tech &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/generarPdfConstanciaInscripcion/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_sigesc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/www-data/web2py/applications/SIGESC/sessions/0fb/1e9/190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a&#x27;, mode &#x27;rb+&#x27; at 0x7f5c8b204e40&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/SIGESC/sessions/190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>3e2d4d8ad13105e3b75f73c9756211f1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>190.39.31.1-50a51590-a902-46a2-ad82-3bbf2b7de49a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_sigesc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>SIGESC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>Sistema de Gestion del Servicio Comunitario</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>SIGESC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/generarPdfConstanciaInscripcion.html</div></td></tr></table></div>'
tRp164
sS'locals'
p165
(dp166
S'k'
S"'f_sexo'"
p167
sS'self'
p168
S"<Row {'f_informe': '', 't_inscripcion': <Set (t_...sa': <Set (t_cursa.f_estudiante = 8)>, 'id': 8L}>"
p169
sssS'traceback'
p170
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/SIGESC/controllers/default.py", line 2550, in <module>\n  File "/home/www-data/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/www-data/web2py/applications/SIGESC/controllers/default.py", line 2452, in generarPdfConstanciaInscripcion\n    genero = est[0].f_sexo\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/objects.py", line 90, in __getattr__\n    raise AttributeError\nAttributeError\n'
p171
s.