### we prepend t_ to tablenames and f_ to fieldnames for disambiguity

########################################
# Rupdev
#

auth.define_tables(username=True)

# Usuarios internos de la universidad (usuarios con usbid)
db.define_table('t_usuario_universitario',
    Field('f_usbid', type='string', notnull=True, unique=True,
          label=T('Usbid'), writable=True,),
    Field('f_nombres', type='string', notnull=True,
          label=T('Nombres')),
    Field('f_apellidos', type='string', notnull=True,
          label=T('Apellidos')),
    Field('f_email', type='string', notnull=True,
          label=T('Email')),
    Field('f_rol', 
          requires=IS_IN_SET(['Tutor Académico',
                              'Estudiante',
                              'Proponente',
                              'Coordinador',
                              'Asistente']), 
          notnull=True,
          label=T('Rol')),
    Field('f_telefono', type='string', notnull=True,
          label=T('Teléfono')),
    format='%(f_usbid)s')

db.define_table('t_usuario_universitario_archive',db.t_usuario_universitario,Field('current_record','reference t_usuario_universitario',readable=False,writable=False))

# Estudiantes
db.define_table('t_estudiante',
    Field('f_usbid', db.t_usuario_universitario, 
          unique=True, notnull=True,
          requires=IS_IN_DB(db,db.t_usuario_universitario,'%(f_usbid)s'),
          label=T('Usbid'), 
          writable=False),
    Field('f_carrera',type='string', 
          notnull=True,

          label=T('Carrera')),
    Field('f_tipo_estudiante', 
          notnull=True,
          default='Pregrado',
          requires=IS_IN_SET(['Pregrado','Postgrado']), 
          label=T('Tipo de Estudiante')),
    Field('f_sede', 
          requires=IS_IN_SET(['Sartenejas','Litoral']),
          notnull=True,
          default='Sartenejas',
          label=T('Sede')),
    Field('f_foto',type='upload',label=T('Foto'),notnull=False),
    format='%(f_usbid)s',
    migrate=settings.migrate)
    
db.define_table('t_estudiante_archive',db.t_estudiante,Field('current_record','reference t_estudiante',readable=False,writable=False))

########################################
db.define_table('t_estado',
    Field('f_nombre', type='string', notnull=True,
          label=T('Nombre')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_nombre)s',
    migrate=settings.migrate)

db.define_table('t_estado_archive',db.t_estado,Field('current_record','reference t_estado',readable=False,writable=False))

############################################

db.define_table('t_comunidad',
    Field('f_nombre', type='string', notnull=True,
          label=T('Nombre')),
    Field('f_estado', type='reference t_estado', notnull=True,
          label=T('Estado')),
    Field('f_descripcion', type='text', notnull=True,
          label=T('Descripcion')),
    Field('f_cantidadbeneficiados', type='integer', notnull=True,
          label=T('Cantidadbeneficiados')),
    Field('f_estado_del', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_nombre)s',
    migrate=settings.migrate)

#Tutores comunitarios y usuarios externos
db.define_table('t_tutor_comunitario',
    Field('f_nombre_usuario', type='string', 
          notnull=True, unique=True,
          label=T('Nombre de Usuario')),
    Field('f_clave',type='password',notnull=True,
          label=T('Clave')),
    Field('f_nombres', type='string', notnull=True,
          label=T('Nombres')),
    Field('f_apellidos', type='string', notnull=True,
          label=T('Apellidos')),
    Field('f_email', type='string', notnull=True,
          requires=IS_EMAIL(error_message='¡El email no es válido!'),
          label=T('Email')),
    Field('f_telefono', type='string', notnull=True,
          requires = IS_MATCH('^\+?\d{1,3}?[- .]?\(?(?:\d{2,3})\)?[- .]?\d\d\d[- .]?\d\d\d\d$',
          error_message='No es un número de teléfono'),
          label=T('Teléfono')),
    Field('f_es_proponente', type='boolean',
          notnull=True, default=False, writable=False,readable=False,
          label=T('Puede proponer')),
    Field('f_comunidad', type='reference t_comunidad', notnull=True,
          label=T('Comunidad')),
    format='%(f_nombre_usuario)s',
    migrate=settings.migrate)

# Noticias

# Code goes here

#
#
########################################





########################################
# Old tables
db.define_table('t_sede',
    Field('f_nombre', type='string', notnull=True,
          label=T('Nombre')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    
    auth.signature,
    format='%(f_nombre)s',
    migrate=settings.migrate)

db.define_table('t_sede_archive',db.t_sede,Field('current_record','reference t_sede',readable=False,writable=False))

########################################
# db.define_table('t_sexo',
#     Field('f_tipo', type='string', notnull=True,
#           label=T('Tipo')),
#     auth.signature,
#     format='%(f_tipo)s',
#     migrate=settings.migrate)

# db.define_table('t_sexo_archive',db.t_sexo,Field('current_record','reference t_sexo',readable=False,writable=False))

#######################################
db.define_table('t_tutor',
     Field('f_usbid', type='string', notnull=False,
           label=T('Usbid')),
     Field('f_cedula', type='string', notnull=True,
           label=T('Cedula')),
     Field('f_nombre', type='string', notnull=True,
           label=T('Nombre')),
     Field('f_apellido', type='string', notnull=True,
           label=T('Apellido')),
     Field('f_sede', type='reference t_sede', notnull=True,
           label=T('Sede')),
     Field('f_email', type='string', notnull=True,
           label=T('Email')),
     Field('f_sexo',requires=IS_IN_SET(['Femenino', 'Masculino']), notnull=True,
           label=T('Sexo')),
     Field('f_telefono', type='string', notnull=True,
           label=T('Telefono')),
     Field('f_direccion', type='text', notnull=True,
           label=T('Direccion')),
     Field('f_user', type='reference auth_user', notnull=False,
           label=T('Nombre de usuario')),
     Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
           label=T('Estado'), default='Activo'),
     auth.signature,
     format='%(f_usbid)s',
     migrate=settings.migrate)

db.define_table('t_tutor_archive',db.t_tutor,Field('current_record','reference t_tutor',readable=False,writable=False))

########################################
db.define_table('t_tipoprop',
    Field('f_tipo', type='string', notnull=True,
          label=T('Tipo')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_tipo)s',
    migrate=settings.migrate)

db.define_table('t_tipoprop_archive',db.t_tipoprop,Field('current_record','reference t_tipoprop',readable=False,writable=False))

########################################
#db.define_table('t_proyecto',
#    Field('f_codigo', type='string', notnull=True,
#          label=T('Codigo')),
#    auth.signature,
#    format='%(f_codigo)s',
#    migrate=settings.migrate)

#db.define_table('t_proyecto_archive',db.t_proyecto,Field('current_record','reference t_proyecto',readable=False,writable=False))

########################################
db.define_table('t_area',
    Field('f_nombre', type='string', notnull=True,
          label=T('Nombre')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_nombre)s',
    migrate=settings.migrate)

db.define_table('t_area_archive',db.t_area,Field('current_record','reference t_area',readable=False,writable=False))


########################################
db.define_table('t_condicion',
    Field('f_tipo', type='string', notnull=True,
          label=T('Tipo')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_tipo)s',
    migrate=settings.migrate)

db.define_table('t_condicion_archive',db.t_condicion,Field('current_record','reference t_condicion',readable=False,writable=False))

########################################

db.define_table('t_comunidad_archive',db.t_comunidad,Field('current_record','reference t_comunidad',readable=False,writable=False))

########################################
# db.define_table('t_proponente',
#     Field('f_tipoprop', type='reference t_tipoprop', notnull=True,
#           label=T('Tipoprop')),
#     Field('f_cedula', type='string', notnull=True,
#           label=T('Cedula')),
#     Field('f_nombre', type='string', notnull=True,
#           label=T('Nombre')),
#     Field('f_apellido', type='string', notnull=True,
#           label=T('Apellido')),
#     Field('f_email', type='string', notnull=True,
#           label=T('Email')),
#     Field('f_user', type='reference auth_user', notnull=False,
#           label=T('Nombre de usuario')),
#     Field('f_sexo', type='reference t_sexo', notnull=True,
#           label=T('Sexo')),
#     Field('f_telefono', type='string', notnull=True,
#           label=T('Telefono')),
#     Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
#           label=T('Estado'), default='Activo'),
#     auth.signature,
#     format='%(f_tipoprop)s',
#     migrate=settings.migrate)

# db.define_table('t_proponente_archive',db.t_proponente,Field('current_record','reference t_proponente',readable=False,writable=False))

########################################



db.define_table('t_proyecto',
    Field('f_proyecto', type='reference t_proyecto', notnull=False, default=None,
          label=T('ID del proyecto'), writable=False, readable=True),
    Field('f_nombre', type='string', notnull=True,
          label=T('Nombre'),default = ''),
    Field('f_resumen', type='text', notnull=False,
          label=T('Resumen')),
    Field('f_relacion_planes', type='text', notnull=False,
          label=T('Relación con planes nacionales')),
    Field('f_antecedentes', type='text', notnull=False,
          label=T('Antecedentes')),
    Field('f_obj_generales', type='text', notnull=False,
          label=T('Objetivos Generales')),
    Field('f_poblacion_beneficiaria', type='text', notnull=False,
          label=T('Población beneficiaria')),
    Field('f_justificacion', type='text', notnull=False,
          label=T('Justificación')),
    Field('f_evaluacion', type='text', notnull=False,
          label=T('Evaluación')),
    Field('f_difusion_resultados', type='text', notnull=False,
          label=T('Difusión de resultados')),
    Field('f_aplicacion_dir_ley', type='text', notnull=False,
          label=T('Aplicación de las directrices y valores expuestos en la ley')),
    Field('f_obj_aprendizaje', type='text', notnull=False,
          label=T('Objetivos de aprendizaje')),
    Field('f_num_requeridos', type='integer', notnull=False,
          label=T('Número de estudiantes requeridos')),
    Field('f_relevancia', type='text', notnull=False,
          label=T('Relevancia')),
    Field('f_originalidad', type='text', notnull=False,
          label=T('Originalidad')),
    Field('f_capacidad_ejecutora', type='text', notnull=False,
          label=T('Capacidad ejecutora')),
    Field('f_asoc_externa', type='text', notnull=False,
          label=T('Asociatividad externa')),
    Field('f_asoc_interna', type='text', notnull=False,
          label=T('Asociatividad interna')),
    Field('f_incorporacion_estudiantes', type='integer', notnull=False,
          label=T('Incorporación estudiantes')),
    Field('f_incorporacion_profesores', type='integer', notnull=False,
          label=T('Incorporación profesores')),
    Field('f_incorporacion_empleados', type='integer', notnull=False,
          label=T('Incorporación empleados')),
    Field('f_incorporacion_obreros', type='integer', notnull=False,
          label=T('Incorporación obreros')),
    Field('f_area', type='reference t_area', notnull=False,
          label=T('Area')),
    Field('f_estado', type='reference t_estado', notnull=False,
          label=T('Estado')),
    Field('f_fechaini', type='date', requires = IS_DATE(format=('%d/%m/%Y')), notnull=False,
          label=T('Fechaini')),
    Field('f_fechafin', type='date', requires = IS_DATE(format=('%d/%m/%Y')),notnull=False,
          label=T('Fechafin')),
    Field('f_comunidad', type='reference t_comunidad', notnull=False,
          label=T('Comunidad')),
    Field('f_sede', type='reference t_sede', notnull=False,
          label=T('Sede')),
    Field('f_proponente', type='reference auth_user', default=auth.user_id, notnull=True,
          label=T('Proponente')),
    auth.signature,
    format='%(f_codigo)s',
    #primarykey=['f_version','f_codigo'],
    migrate=settings.migrate)
db.define_table('t_proyecto_archive',db.t_proyecto,Field('current_record','reference t_proyecto',readable=False,writable=False))
#db.define_table('t_caracteristicas_archive',db.t_caracteristicas,Field('current_record','reference t_caracteristicas',readable=False,writable=False))


########################################
db.define_table('t_objetivo',
    Field('f_proyecto', type='reference t_proyecto', notnull=True),
    Field('f_objetivo', type='text', notnull=True),
    format='%(f_objetivo)s'
)
db.define_table('t_objetivo_archive',db.t_objetivo,Field('current_record','reference t_objetivo',readable=False,writable=False))

########################################

db.define_table('t_propuesta',
    Field('f_proyecto', type='reference t_proyecto', notnull=True,
          label=T('ID del proyecto'), writable=False, readable=True),
    Field('f_estado_propuesta', requires=IS_IN_SET(['En espera del aval', 'Aval recibido', 'Aprobado', 'Aprobado con observaciones', 'Rechazado']),
          label=T('Estado'), default='En espera del aval', notnull=True),
    Field('f_observaciones', type='text', default='',
          label=T('Observaciones')),
    auth.signature,
    format='%(f_proyecto)s',
    #primarykey=['f_version','f_codigo'],
    migrate=settings.migrate)
db.define_table('t_propuesta_archive',db.t_propuesta,Field('current_record','reference t_propuesta',readable=False,writable=False))
#db.define_table('t_caracteristicas_archive',db.t_caracteristicas,Field('current_record','reference t_caracteristicas',readable=False,writable=False))

########################################
db.define_table('t_proyecto_aprobado',
    Field('f_proyecto', type='reference t_proyecto', notnull=True,
          label=T('ID del proyecto'), writable=False, readable=True),
    Field('f_codigo', type='string', notnull=True, unique = True,
          label=T('Código')),
    Field('f_estado_proyecto', requires=IS_IN_SET(['Activo', 'Inactivo']),
          label=T('Estado'), default='Activo', notnull=True),
    auth.signature,
    format='%(f_proyecto)s',
    #primarykey=['f_version','f_codigo'],
    migrate=settings.migrate)
db.define_table('t_proyecto_aprobado_archive',db.t_proyecto_aprobado,Field('current_record','reference t_proyecto_aprobado',readable=False,writable=False))

########################################
db.define_table('t_proyecto_tutor',
    Field('f_proyecto', type='reference t_proyecto'),
    Field('f_tutor', type='reference t_tutor'))
db.define_table('t_proyecto_tutor_archive',db.t_proyecto_tutor,Field('current_record','reference t_proyecto_tutor',readable=False,writable=False))

########################################
db.define_table('t_proyecto_tutor_comunitario',
    Field('f_proyecto', type='reference t_proyecto'),
    Field('f_tutor', type='reference t_tutor_comunitario'))
db.define_table('t_proyecto_tutor_comunitario_archive',db.t_proyecto_tutor_comunitario,Field('current_record','reference t_proyecto_tutor_comunitario',readable=False,writable=False))

########################################

db.define_table('t_actividad',
    Field('f_proyecto', type='reference t_proyecto', notnull=True, writable=False, readable=True,
          label=T('Proyecto')),
    Field('f_nombre', type='string', notnull=True, default='',
          label=T('Nombre')),
    Field('f_resumen', type='text', default='',
          label=T('Resumen')),
    Field('f_alumnos', type='integer', default=1,
          label=T('Alumnos requeridos')),
    Field('f_requerimientos', type='text', default='',
          label=T('Requerimientos')),
    Field('f_recursos', type='text', default='',
          label=T('Recursos')),
    Field('f_costo', type='float',
          label=T('Costo')),
    Field('f_recursos_propios', type='text', default='',
          label=T('Recursos propios')),
    Field('f_aportes_otros', type='text', default='',
          label=T('Aportes de otros donantes')),
    Field('f_aportes_dex', type='text', default='',
          label=T('Aportes solicitados a DEx')),
    Field('f_monto_total', type='float', default='',
          label=T('Monto total'))
                                                                                          
                    
)   
db.define_table('t_actividad_archive',db.t_actividad,Field('current_record','reference t_actividad',readable=False,writable=False))

########################################

db.define_table('t_plan_operativo',
    Field('f_proyecto', type='reference t_proyecto', notnull=True,
          label=T('Proyecto')),
    Field('f_actividad', type='reference t_actividad', notnull=True,
          label=T('Actividad')),
    Field('f_objetivo', type='reference t_objetivo', notnull=True,
          label=T('Objetivo')),
    Field('f_meta', type='text', notnull=True,
          label=T('Meta')),
    Field('f_tiempo', type='integer', notnull=True,
          label=T('Tiempo de ejecución')),
    Field('f_recursos', type='text', notnull=True,
          label=T('Recursos humanos y materiales')),
    Field('f_resultados_esperados', type='text', notnull=True,
          label=T('Resultados esperados')),
    Field('f_responsable', type='string', notnull=True,
          label=T('Responsable')),
)   
db.define_table('t_plan_operativo_archive',db.t_plan_operativo,Field('current_record','reference t_plan_operativo',readable=False,writable=False))

########################################
db.define_table('t_carrera',
    Field('f_codigo', type='string', notnull=True,
          label=T('Codigo')),
    Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
          label=T('Estado'), default='Activo'),
    auth.signature,
    format='%(f_codigo)s',
    migrate=settings.migrate)

db.define_table('t_carrera_archive',db.t_carrera,Field('current_record','reference t_carrera',readable=False,writable=False))

#######################################
# db.define_table('t_estudiante',
#     Field('f_usbid', type='string', notnull=True,
#           label=T('Usbid'), writable=False),
#     Field('f_nombre', type='string', notnull=True,
#           label=T('Nombre')),
#     Field('f_apellido', type='string', notnull=True,
#           label=T('Apellido')),
#     Field('f_cedula', type='string', notnull=True,
#           label=T('Cedula')),
#     Field('f_carrera', type='reference t_carrera', notnull=True,
#           label=T('Carrera')),
#     Field('f_sede', type='reference t_sede', notnull=True,
#           label=T('Sede')),
#     Field('f_email', type='string', notnull=True,
#           label=T('Email')),
#     Field('f_sexo', type='reference t_sexo', notnull=True,
#           label=T('Sexo')),
#     Field('f_telefono', type='string', notnull=True,
#           label=T('Telefono')),
#     Field('f_user', type='reference auth_user', notnull=False,
#           label=T('Nombre de usuario')),
#     Field('f_direccion', type='text', notnull=True,
#           label=T('Direccion')),
#     Field('f_estado', requires=IS_IN_SET(['Activo', 'Inactivo']), notnull=True,
#           label=T('Estado'), default='Activo'),
#     auth.signature,
#     format='%(f_usbid)s',
#     migrate=settings.migrate)

# db.define_table('t_estudiante_archive',db.t_estudiante,Field('current_record','reference t_estudiante',readable=False,writable=False))

########################################
db.define_table('t_relacionestproy',
    Field('f_tipo', type='string', notnull=True,
          label=T('Tipo')),
    
    auth.signature,
    format='%(f_tipo)s',
    migrate=settings.migrate)

db.define_table('t_relacionestproy_archive',db.t_relacionestproy,Field('current_record','reference t_relacionestproy',readable=False,writable=False))

########################################
db.define_table('t_cursa',
    Field('f_estudiante', type='reference t_estudiante', notnull=True,
          label=T('Estudiante')),
    Field('f_proyecto', type='reference t_proyecto', notnull=True,
          label=T('Proyecto')),
    Field('f_state', type='reference t_relacionestproy', notnull=True,
          label=T('State')),
    Field('f_valido', type='string', notnull=True, label=T('Valido'), default='Invalido'),
    auth.signature,
    format='%(f_estudiante)s',
    migrate=settings.migrate)

db.define_table('t_cursa_archive',db.t_cursa,Field('current_record','reference t_cursa',readable=False,writable=False))

# all we need is login
auth.settings.actions_disabled=['register','change_password','request_reset_password','retrieve_username','profile']

# you don't have to remember me
auth.settings.remember_me_form = False

# ldap authentication and not save password on web2py
# from gluon.contrib.login_methods.ldap_auth import ldap_auth
# auth.settings.login_methods = [ldap_auth(mode='ad',
#    server='ldap.usb.ve',
#    base_dn='ou=People,dc=usb,dc=ve')]
